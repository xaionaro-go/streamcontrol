// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: recoder.proto

package recoder_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoggingLevel int32

const (
	LoggingLevel_LoggingLevelNone  LoggingLevel = 0
	LoggingLevel_LoggingLevelFatal LoggingLevel = 1
	LoggingLevel_LoggingLevelPanic LoggingLevel = 2
	LoggingLevel_LoggingLevelError LoggingLevel = 3
	LoggingLevel_LoggingLevelWarn  LoggingLevel = 4
	LoggingLevel_LoggingLevelInfo  LoggingLevel = 5
	LoggingLevel_LoggingLevelDebug LoggingLevel = 6
	LoggingLevel_LoggingLevelTrace LoggingLevel = 7
)

// Enum value maps for LoggingLevel.
var (
	LoggingLevel_name = map[int32]string{
		0: "LoggingLevelNone",
		1: "LoggingLevelFatal",
		2: "LoggingLevelPanic",
		3: "LoggingLevelError",
		4: "LoggingLevelWarn",
		5: "LoggingLevelInfo",
		6: "LoggingLevelDebug",
		7: "LoggingLevelTrace",
	}
	LoggingLevel_value = map[string]int32{
		"LoggingLevelNone":  0,
		"LoggingLevelFatal": 1,
		"LoggingLevelPanic": 2,
		"LoggingLevelError": 3,
		"LoggingLevelWarn":  4,
		"LoggingLevelInfo":  5,
		"LoggingLevelDebug": 6,
		"LoggingLevelTrace": 7,
	}
)

func (x LoggingLevel) Enum() *LoggingLevel {
	p := new(LoggingLevel)
	*p = x
	return p
}

func (x LoggingLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoggingLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_recoder_proto_enumTypes[0].Descriptor()
}

func (LoggingLevel) Type() protoreflect.EnumType {
	return &file_recoder_proto_enumTypes[0]
}

func (x LoggingLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoggingLevel.Descriptor instead.
func (LoggingLevel) EnumDescriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{0}
}

type SetLoggingLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level LoggingLevel `protobuf:"varint,1,opt,name=level,proto3,enum=recoder_grpc.LoggingLevel" json:"level,omitempty"`
}

func (x *SetLoggingLevelRequest) Reset() {
	*x = SetLoggingLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLoggingLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLoggingLevelRequest) ProtoMessage() {}

func (x *SetLoggingLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLoggingLevelRequest.ProtoReflect.Descriptor instead.
func (*SetLoggingLevelRequest) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{0}
}

func (x *SetLoggingLevelRequest) GetLevel() LoggingLevel {
	if x != nil {
		return x.Level
	}
	return LoggingLevel_LoggingLevelNone
}

type SetLoggingLevelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetLoggingLevelReply) Reset() {
	*x = SetLoggingLevelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLoggingLevelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLoggingLevelReply) ProtoMessage() {}

func (x *SetLoggingLevelReply) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLoggingLevelReply.ProtoReflect.Descriptor instead.
func (*SetLoggingLevelReply) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{1}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{2}
}

func (x *Error) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResourcePathURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	AuthKey string `protobuf:"bytes,2,opt,name=authKey,proto3" json:"authKey,omitempty"`
}

func (x *ResourcePathURL) Reset() {
	*x = ResourcePathURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePathURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePathURL) ProtoMessage() {}

func (x *ResourcePathURL) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePathURL.ProtoReflect.Descriptor instead.
func (*ResourcePathURL) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{3}
}

func (x *ResourcePathURL) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResourcePathURL) GetAuthKey() string {
	if x != nil {
		return x.AuthKey
	}
	return ""
}

type ResourcePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ResourcePath:
	//
	//	*ResourcePath_Url
	ResourcePath isResourcePath_ResourcePath `protobuf_oneof:"ResourcePath"`
}

func (x *ResourcePath) Reset() {
	*x = ResourcePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePath) ProtoMessage() {}

func (x *ResourcePath) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePath.ProtoReflect.Descriptor instead.
func (*ResourcePath) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{4}
}

func (m *ResourcePath) GetResourcePath() isResourcePath_ResourcePath {
	if m != nil {
		return m.ResourcePath
	}
	return nil
}

func (x *ResourcePath) GetUrl() *ResourcePathURL {
	if x, ok := x.GetResourcePath().(*ResourcePath_Url); ok {
		return x.Url
	}
	return nil
}

type isResourcePath_ResourcePath interface {
	isResourcePath_ResourcePath()
}

type ResourcePath_Url struct {
	Url *ResourcePathURL `protobuf:"bytes,1,opt,name=url,proto3,oneof"`
}

func (*ResourcePath_Url) isResourcePath_ResourcePath() {}

type InputConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InputConfig) Reset() {
	*x = InputConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputConfig) ProtoMessage() {}

func (x *InputConfig) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputConfig.ProtoReflect.Descriptor instead.
func (*InputConfig) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{5}
}

type NewInputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   *ResourcePath `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Config *InputConfig  `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *NewInputRequest) Reset() {
	*x = NewInputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewInputRequest) ProtoMessage() {}

func (x *NewInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewInputRequest.ProtoReflect.Descriptor instead.
func (*NewInputRequest) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{6}
}

func (x *NewInputRequest) GetPath() *ResourcePath {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *NewInputRequest) GetConfig() *InputConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type NewInputReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NewInputReply) Reset() {
	*x = NewInputReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewInputReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewInputReply) ProtoMessage() {}

func (x *NewInputReply) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewInputReply.ProtoReflect.Descriptor instead.
func (*NewInputReply) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{7}
}

func (x *NewInputReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OutputConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OutputConfig) Reset() {
	*x = OutputConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputConfig) ProtoMessage() {}

func (x *OutputConfig) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputConfig.ProtoReflect.Descriptor instead.
func (*OutputConfig) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{8}
}

type NewOutputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   *ResourcePath `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Config *OutputConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *NewOutputRequest) Reset() {
	*x = NewOutputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOutputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOutputRequest) ProtoMessage() {}

func (x *NewOutputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOutputRequest.ProtoReflect.Descriptor instead.
func (*NewOutputRequest) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{9}
}

func (x *NewOutputRequest) GetPath() *ResourcePath {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *NewOutputRequest) GetConfig() *OutputConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type NewOutputReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NewOutputReply) Reset() {
	*x = NewOutputReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOutputReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOutputReply) ProtoMessage() {}

func (x *NewOutputReply) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOutputReply.ProtoReflect.Descriptor instead.
func (*NewOutputReply) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{10}
}

func (x *NewOutputReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RecoderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecoderConfig) Reset() {
	*x = RecoderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoderConfig) ProtoMessage() {}

func (x *RecoderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoderConfig.ProtoReflect.Descriptor instead.
func (*RecoderConfig) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{11}
}

type NewRecoderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *RecoderConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *NewRecoderRequest) Reset() {
	*x = NewRecoderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRecoderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRecoderRequest) ProtoMessage() {}

func (x *NewRecoderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRecoderRequest.ProtoReflect.Descriptor instead.
func (*NewRecoderRequest) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{12}
}

func (x *NewRecoderRequest) GetConfig() *RecoderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type NewRecoderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NewRecoderReply) Reset() {
	*x = NewRecoderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRecoderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRecoderReply) ProtoMessage() {}

func (x *NewRecoderReply) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRecoderReply.ProtoReflect.Descriptor instead.
func (*NewRecoderReply) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{13}
}

func (x *NewRecoderReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CloseInputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputID uint64 `protobuf:"varint,1,opt,name=inputID,proto3" json:"inputID,omitempty"`
}

func (x *CloseInputRequest) Reset() {
	*x = CloseInputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseInputRequest) ProtoMessage() {}

func (x *CloseInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseInputRequest.ProtoReflect.Descriptor instead.
func (*CloseInputRequest) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{14}
}

func (x *CloseInputRequest) GetInputID() uint64 {
	if x != nil {
		return x.InputID
	}
	return 0
}

type CloseInputReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseInputReply) Reset() {
	*x = CloseInputReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseInputReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseInputReply) ProtoMessage() {}

func (x *CloseInputReply) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseInputReply.ProtoReflect.Descriptor instead.
func (*CloseInputReply) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{15}
}

type CloseOutputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputID uint64 `protobuf:"varint,2,opt,name=outputID,proto3" json:"outputID,omitempty"`
}

func (x *CloseOutputRequest) Reset() {
	*x = CloseOutputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOutputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOutputRequest) ProtoMessage() {}

func (x *CloseOutputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOutputRequest.ProtoReflect.Descriptor instead.
func (*CloseOutputRequest) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{16}
}

func (x *CloseOutputRequest) GetOutputID() uint64 {
	if x != nil {
		return x.OutputID
	}
	return 0
}

type CloseOutputReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseOutputReply) Reset() {
	*x = CloseOutputReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseOutputReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseOutputReply) ProtoMessage() {}

func (x *CloseOutputReply) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseOutputReply.ProtoReflect.Descriptor instead.
func (*CloseOutputReply) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{17}
}

type GetRecoderStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecoderID uint64 `protobuf:"varint,1,opt,name=recoderID,proto3" json:"recoderID,omitempty"`
}

func (x *GetRecoderStatsRequest) Reset() {
	*x = GetRecoderStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecoderStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecoderStatsRequest) ProtoMessage() {}

func (x *GetRecoderStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecoderStatsRequest.ProtoReflect.Descriptor instead.
func (*GetRecoderStatsRequest) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{18}
}

func (x *GetRecoderStatsRequest) GetRecoderID() uint64 {
	if x != nil {
		return x.RecoderID
	}
	return 0
}

type GetRecoderStatsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesCountRead  uint64 `protobuf:"varint,1,opt,name=bytesCountRead,proto3" json:"bytesCountRead,omitempty"`
	BytesCountWrote uint64 `protobuf:"varint,2,opt,name=bytesCountWrote,proto3" json:"bytesCountWrote,omitempty"`
}

func (x *GetRecoderStatsReply) Reset() {
	*x = GetRecoderStatsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecoderStatsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecoderStatsReply) ProtoMessage() {}

func (x *GetRecoderStatsReply) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecoderStatsReply.ProtoReflect.Descriptor instead.
func (*GetRecoderStatsReply) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{19}
}

func (x *GetRecoderStatsReply) GetBytesCountRead() uint64 {
	if x != nil {
		return x.BytesCountRead
	}
	return 0
}

func (x *GetRecoderStatsReply) GetBytesCountWrote() uint64 {
	if x != nil {
		return x.BytesCountWrote
	}
	return 0
}

type StartRecodingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecoderID uint64 `protobuf:"varint,1,opt,name=recoderID,proto3" json:"recoderID,omitempty"`
	InputID   uint64 `protobuf:"varint,2,opt,name=inputID,proto3" json:"inputID,omitempty"`
	OutputID  uint64 `protobuf:"varint,3,opt,name=outputID,proto3" json:"outputID,omitempty"`
}

func (x *StartRecodingRequest) Reset() {
	*x = StartRecodingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecodingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecodingRequest) ProtoMessage() {}

func (x *StartRecodingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecodingRequest.ProtoReflect.Descriptor instead.
func (*StartRecodingRequest) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{20}
}

func (x *StartRecodingRequest) GetRecoderID() uint64 {
	if x != nil {
		return x.RecoderID
	}
	return 0
}

func (x *StartRecodingRequest) GetInputID() uint64 {
	if x != nil {
		return x.InputID
	}
	return 0
}

func (x *StartRecodingRequest) GetOutputID() uint64 {
	if x != nil {
		return x.OutputID
	}
	return 0
}

type StartRecodingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartRecodingReply) Reset() {
	*x = StartRecodingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecodingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecodingReply) ProtoMessage() {}

func (x *StartRecodingReply) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecodingReply.ProtoReflect.Descriptor instead.
func (*StartRecodingReply) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{21}
}

type RecodingEndedChanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecoderID uint64 `protobuf:"varint,1,opt,name=recoderID,proto3" json:"recoderID,omitempty"`
}

func (x *RecodingEndedChanRequest) Reset() {
	*x = RecodingEndedChanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecodingEndedChanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecodingEndedChanRequest) ProtoMessage() {}

func (x *RecodingEndedChanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecodingEndedChanRequest.ProtoReflect.Descriptor instead.
func (*RecodingEndedChanRequest) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{22}
}

func (x *RecodingEndedChanRequest) GetRecoderID() uint64 {
	if x != nil {
		return x.RecoderID
	}
	return 0
}

type RecodingEndedChanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecodingEndedChanReply) Reset() {
	*x = RecodingEndedChanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recoder_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecodingEndedChanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecodingEndedChanReply) ProtoMessage() {}

func (x *RecodingEndedChanReply) ProtoReflect() protoreflect.Message {
	mi := &file_recoder_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecodingEndedChanReply.ProtoReflect.Descriptor instead.
func (*RecodingEndedChanReply) Descriptor() ([]byte, []int) {
	return file_recoder_proto_rawDescGZIP(), []int{23}
}

var File_recoder_proto protoreflect.FileDescriptor

var file_recoder_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x22, 0x4a, 0x0a,
	0x16, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x22, 0x51, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x55, 0x52, 0x4c, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x74, 0x0a, 0x0f, 0x4e, 0x65, 0x77,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x1f, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x0e, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x76, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x20, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x48, 0x0a, 0x11, 0x4e,
	0x65, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x21, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x44, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x30, 0x0a, 0x12, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x44, 0x22, 0x12, 0x0a, 0x10,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x36, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x68, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x72, 0x6f,
	0x74, 0x65, 0x22, 0x6a, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x44, 0x22, 0x14,
	0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x38, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x18,
	0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0xc3, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x46,
	0x61, 0x74, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x10, 0x02, 0x12, 0x15, 0x0a,
	0x11, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x57, 0x61, 0x72, 0x6e, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x05,
	0x12, 0x15, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x10, 0x07, 0x32, 0x91,
	0x06, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x0f, 0x53, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x08, 0x4e, 0x65, 0x77,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x1e, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4e, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4e, 0x65, 0x77, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x12, 0x1f,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4e,
	0x65, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1f,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x51, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x20, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x11, 0x52,
	0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x12, 0x26, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x30, 0x01, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x6f, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recoder_proto_rawDescOnce sync.Once
	file_recoder_proto_rawDescData = file_recoder_proto_rawDesc
)

func file_recoder_proto_rawDescGZIP() []byte {
	file_recoder_proto_rawDescOnce.Do(func() {
		file_recoder_proto_rawDescData = protoimpl.X.CompressGZIP(file_recoder_proto_rawDescData)
	})
	return file_recoder_proto_rawDescData
}

var file_recoder_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_recoder_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_recoder_proto_goTypes = []interface{}{
	(LoggingLevel)(0),                // 0: recoder_grpc.LoggingLevel
	(*SetLoggingLevelRequest)(nil),   // 1: recoder_grpc.SetLoggingLevelRequest
	(*SetLoggingLevelReply)(nil),     // 2: recoder_grpc.SetLoggingLevelReply
	(*Error)(nil),                    // 3: recoder_grpc.Error
	(*ResourcePathURL)(nil),          // 4: recoder_grpc.ResourcePathURL
	(*ResourcePath)(nil),             // 5: recoder_grpc.ResourcePath
	(*InputConfig)(nil),              // 6: recoder_grpc.InputConfig
	(*NewInputRequest)(nil),          // 7: recoder_grpc.NewInputRequest
	(*NewInputReply)(nil),            // 8: recoder_grpc.NewInputReply
	(*OutputConfig)(nil),             // 9: recoder_grpc.OutputConfig
	(*NewOutputRequest)(nil),         // 10: recoder_grpc.NewOutputRequest
	(*NewOutputReply)(nil),           // 11: recoder_grpc.NewOutputReply
	(*RecoderConfig)(nil),            // 12: recoder_grpc.RecoderConfig
	(*NewRecoderRequest)(nil),        // 13: recoder_grpc.NewRecoderRequest
	(*NewRecoderReply)(nil),          // 14: recoder_grpc.NewRecoderReply
	(*CloseInputRequest)(nil),        // 15: recoder_grpc.CloseInputRequest
	(*CloseInputReply)(nil),          // 16: recoder_grpc.CloseInputReply
	(*CloseOutputRequest)(nil),       // 17: recoder_grpc.CloseOutputRequest
	(*CloseOutputReply)(nil),         // 18: recoder_grpc.CloseOutputReply
	(*GetRecoderStatsRequest)(nil),   // 19: recoder_grpc.GetRecoderStatsRequest
	(*GetRecoderStatsReply)(nil),     // 20: recoder_grpc.GetRecoderStatsReply
	(*StartRecodingRequest)(nil),     // 21: recoder_grpc.StartRecodingRequest
	(*StartRecodingReply)(nil),       // 22: recoder_grpc.StartRecodingReply
	(*RecodingEndedChanRequest)(nil), // 23: recoder_grpc.RecodingEndedChanRequest
	(*RecodingEndedChanReply)(nil),   // 24: recoder_grpc.RecodingEndedChanReply
}
var file_recoder_proto_depIdxs = []int32{
	0,  // 0: recoder_grpc.SetLoggingLevelRequest.level:type_name -> recoder_grpc.LoggingLevel
	4,  // 1: recoder_grpc.ResourcePath.url:type_name -> recoder_grpc.ResourcePathURL
	5,  // 2: recoder_grpc.NewInputRequest.path:type_name -> recoder_grpc.ResourcePath
	6,  // 3: recoder_grpc.NewInputRequest.config:type_name -> recoder_grpc.InputConfig
	5,  // 4: recoder_grpc.NewOutputRequest.path:type_name -> recoder_grpc.ResourcePath
	9,  // 5: recoder_grpc.NewOutputRequest.config:type_name -> recoder_grpc.OutputConfig
	12, // 6: recoder_grpc.NewRecoderRequest.config:type_name -> recoder_grpc.RecoderConfig
	1,  // 7: recoder_grpc.Recoder.SetLoggingLevel:input_type -> recoder_grpc.SetLoggingLevelRequest
	7,  // 8: recoder_grpc.Recoder.NewInput:input_type -> recoder_grpc.NewInputRequest
	10, // 9: recoder_grpc.Recoder.NewOutput:input_type -> recoder_grpc.NewOutputRequest
	13, // 10: recoder_grpc.Recoder.NewRecoder:input_type -> recoder_grpc.NewRecoderRequest
	15, // 11: recoder_grpc.Recoder.CloseInput:input_type -> recoder_grpc.CloseInputRequest
	17, // 12: recoder_grpc.Recoder.CloseOutput:input_type -> recoder_grpc.CloseOutputRequest
	19, // 13: recoder_grpc.Recoder.GetRecoderStats:input_type -> recoder_grpc.GetRecoderStatsRequest
	21, // 14: recoder_grpc.Recoder.StartRecoding:input_type -> recoder_grpc.StartRecodingRequest
	23, // 15: recoder_grpc.Recoder.RecodingEndedChan:input_type -> recoder_grpc.RecodingEndedChanRequest
	2,  // 16: recoder_grpc.Recoder.SetLoggingLevel:output_type -> recoder_grpc.SetLoggingLevelReply
	8,  // 17: recoder_grpc.Recoder.NewInput:output_type -> recoder_grpc.NewInputReply
	11, // 18: recoder_grpc.Recoder.NewOutput:output_type -> recoder_grpc.NewOutputReply
	14, // 19: recoder_grpc.Recoder.NewRecoder:output_type -> recoder_grpc.NewRecoderReply
	16, // 20: recoder_grpc.Recoder.CloseInput:output_type -> recoder_grpc.CloseInputReply
	18, // 21: recoder_grpc.Recoder.CloseOutput:output_type -> recoder_grpc.CloseOutputReply
	20, // 22: recoder_grpc.Recoder.GetRecoderStats:output_type -> recoder_grpc.GetRecoderStatsReply
	22, // 23: recoder_grpc.Recoder.StartRecoding:output_type -> recoder_grpc.StartRecodingReply
	24, // 24: recoder_grpc.Recoder.RecodingEndedChan:output_type -> recoder_grpc.RecodingEndedChanReply
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_recoder_proto_init() }
func file_recoder_proto_init() {
	if File_recoder_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recoder_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLoggingLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLoggingLevelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePathURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewInputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewInputReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOutputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOutputReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRecoderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRecoderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseInputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseInputReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOutputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseOutputReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecoderStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecoderStatsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecodingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecodingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecodingEndedChanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recoder_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecodingEndedChanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_recoder_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ResourcePath_Url)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recoder_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recoder_proto_goTypes,
		DependencyIndexes: file_recoder_proto_depIdxs,
		EnumInfos:         file_recoder_proto_enumTypes,
		MessageInfos:      file_recoder_proto_msgTypes,
	}.Build()
	File_recoder_proto = out.File
	file_recoder_proto_rawDesc = nil
	file_recoder_proto_goTypes = nil
	file_recoder_proto_depIdxs = nil
}
