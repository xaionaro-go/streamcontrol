// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: streamd.proto

package streamd_grpc

import (
	player_grpc "github.com/xaionaro-go/streamctl/pkg/player/protobuf/go/player_grpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HashType int32

const (
	HashType_HASH_SHA1 HashType = 0
)

// Enum value maps for HashType.
var (
	HashType_name = map[int32]string{
		0: "HASH_SHA1",
	}
	HashType_value = map[string]int32{
		"HASH_SHA1": 0,
	}
)

func (x HashType) Enum() *HashType {
	p := new(HashType)
	*p = x
	return p
}

func (x HashType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HashType) Descriptor() protoreflect.EnumDescriptor {
	return file_streamd_proto_enumTypes[0].Descriptor()
}

func (HashType) Type() protoreflect.EnumType {
	return &file_streamd_proto_enumTypes[0]
}

func (x HashType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HashType.Descriptor instead.
func (HashType) EnumDescriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{0}
}

type StreamServerType int32

const (
	StreamServerType_Undefined StreamServerType = 0
	StreamServerType_RTSP      StreamServerType = 1
	StreamServerType_RTMP      StreamServerType = 2
)

// Enum value maps for StreamServerType.
var (
	StreamServerType_name = map[int32]string{
		0: "Undefined",
		1: "RTSP",
		2: "RTMP",
	}
	StreamServerType_value = map[string]int32{
		"Undefined": 0,
		"RTSP":      1,
		"RTMP":      2,
	}
)

func (x StreamServerType) Enum() *StreamServerType {
	p := new(StreamServerType)
	*p = x
	return p
}

func (x StreamServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_streamd_proto_enumTypes[1].Descriptor()
}

func (StreamServerType) Type() protoreflect.EnumType {
	return &file_streamd_proto_enumTypes[1]
}

func (x StreamServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamServerType.Descriptor instead.
func (StreamServerType) EnumDescriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{1}
}

type PlayerType int32

const (
	PlayerType_PlayerTypeAuto   PlayerType = 0
	PlayerType_PlayerTypeLibVLC PlayerType = 1
	PlayerType_PlayerTypeMPV    PlayerType = 2
)

// Enum value maps for PlayerType.
var (
	PlayerType_name = map[int32]string{
		0: "PlayerTypeAuto",
		1: "PlayerTypeLibVLC",
		2: "PlayerTypeMPV",
	}
	PlayerType_value = map[string]int32{
		"PlayerTypeAuto":   0,
		"PlayerTypeLibVLC": 1,
		"PlayerTypeMPV":    2,
	}
)

func (x PlayerType) Enum() *PlayerType {
	p := new(PlayerType)
	*p = x
	return p
}

func (x PlayerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerType) Descriptor() protoreflect.EnumDescriptor {
	return file_streamd_proto_enumTypes[2].Descriptor()
}

func (PlayerType) Type() protoreflect.EnumType {
	return &file_streamd_proto_enumTypes[2]
}

func (x PlayerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerType.Descriptor instead.
func (PlayerType) EnumDescriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{2}
}

type GetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{0}
}

type GetConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetConfigReply) Reset() {
	*x = GetConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReply) ProtoMessage() {}

func (x *GetConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReply.ProtoReflect.Descriptor instead.
func (*GetConfigReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{1}
}

func (x *GetConfigReply) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type SetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SetConfigRequest) Reset() {
	*x = SetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigRequest) ProtoMessage() {}

func (x *SetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigRequest.ProtoReflect.Descriptor instead.
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{2}
}

func (x *SetConfigRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type SetConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConfigReply) Reset() {
	*x = SetConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigReply) ProtoMessage() {}

func (x *SetConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigReply.ProtoReflect.Descriptor instead.
func (*SetConfigReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{3}
}

type SaveConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveConfigRequest) Reset() {
	*x = SaveConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveConfigRequest) ProtoMessage() {}

func (x *SaveConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveConfigRequest.ProtoReflect.Descriptor instead.
func (*SaveConfigRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{4}
}

type SaveConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveConfigReply) Reset() {
	*x = SaveConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveConfigReply) ProtoMessage() {}

func (x *SaveConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveConfigReply.ProtoReflect.Descriptor instead.
func (*SaveConfigReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{5}
}

type ResetCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetCacheRequest) Reset() {
	*x = ResetCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCacheRequest) ProtoMessage() {}

func (x *ResetCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCacheRequest.ProtoReflect.Descriptor instead.
func (*ResetCacheRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{6}
}

type ResetCacheReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetCacheReply) Reset() {
	*x = ResetCacheReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetCacheReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetCacheReply) ProtoMessage() {}

func (x *ResetCacheReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetCacheReply.ProtoReflect.Descriptor instead.
func (*ResetCacheReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{7}
}

type InitCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitCacheRequest) Reset() {
	*x = InitCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitCacheRequest) ProtoMessage() {}

func (x *InitCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitCacheRequest.ProtoReflect.Descriptor instead.
func (*InitCacheRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{8}
}

type InitCacheReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitCacheReply) Reset() {
	*x = InitCacheReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitCacheReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitCacheReply) ProtoMessage() {}

func (x *InitCacheReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitCacheReply.ProtoReflect.Descriptor instead.
func (*InitCacheReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{9}
}

type StartStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID      string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Profile     string `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *StartStreamRequest) Reset() {
	*x = StartStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamRequest) ProtoMessage() {}

func (x *StartStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamRequest.ProtoReflect.Descriptor instead.
func (*StartStreamRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{10}
}

func (x *StartStreamRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

func (x *StartStreamRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StartStreamRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StartStreamRequest) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

type StartStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartStreamReply) Reset() {
	*x = StartStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamReply) ProtoMessage() {}

func (x *StartStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamReply.ProtoReflect.Descriptor instead.
func (*StartStreamReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{11}
}

type EndStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
}

func (x *EndStreamRequest) Reset() {
	*x = EndStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndStreamRequest) ProtoMessage() {}

func (x *EndStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndStreamRequest.ProtoReflect.Descriptor instead.
func (*EndStreamRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{12}
}

func (x *EndStreamRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

type EndStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndStreamReply) Reset() {
	*x = EndStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndStreamReply) ProtoMessage() {}

func (x *EndStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndStreamReply.ProtoReflect.Descriptor instead.
func (*EndStreamReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{13}
}

type GetStreamStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID  string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
	NoCache bool   `protobuf:"varint,2,opt,name=noCache,proto3" json:"noCache,omitempty"`
}

func (x *GetStreamStatusRequest) Reset() {
	*x = GetStreamStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamStatusRequest) ProtoMessage() {}

func (x *GetStreamStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStreamStatusRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{14}
}

func (x *GetStreamStatusRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

func (x *GetStreamStatusRequest) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

type GetStreamStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsActive   bool   `protobuf:"varint,1,opt,name=isActive,proto3" json:"isActive,omitempty"`
	StartedAt  *int64 `protobuf:"varint,2,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	CustomData string `protobuf:"bytes,3,opt,name=customData,proto3" json:"customData,omitempty"`
}

func (x *GetStreamStatusReply) Reset() {
	*x = GetStreamStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamStatusReply) ProtoMessage() {}

func (x *GetStreamStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamStatusReply.ProtoReflect.Descriptor instead.
func (*GetStreamStatusReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{15}
}

func (x *GetStreamStatusReply) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetStreamStatusReply) GetStartedAt() int64 {
	if x != nil && x.StartedAt != nil {
		return *x.StartedAt
	}
	return 0
}

func (x *GetStreamStatusReply) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

type GetBackendInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
}

func (x *GetBackendInfoRequest) Reset() {
	*x = GetBackendInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackendInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackendInfoRequest) ProtoMessage() {}

func (x *GetBackendInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackendInfoRequest.ProtoReflect.Descriptor instead.
func (*GetBackendInfoRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{16}
}

func (x *GetBackendInfoRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

type GetBackendInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInitialized bool   `protobuf:"varint,1,opt,name=isInitialized,proto3" json:"isInitialized,omitempty"`
	Data          string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBackendInfoReply) Reset() {
	*x = GetBackendInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBackendInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackendInfoReply) ProtoMessage() {}

func (x *GetBackendInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackendInfoReply.ProtoReflect.Descriptor instead.
func (*GetBackendInfoReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{17}
}

func (x *GetBackendInfoReply) GetIsInitialized() bool {
	if x != nil {
		return x.IsInitialized
	}
	return false
}

func (x *GetBackendInfoReply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type IsBackendEnabledRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
}

func (x *IsBackendEnabledRequest) Reset() {
	*x = IsBackendEnabledRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBackendEnabledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBackendEnabledRequest) ProtoMessage() {}

func (x *IsBackendEnabledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBackendEnabledRequest.ProtoReflect.Descriptor instead.
func (*IsBackendEnabledRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{18}
}

func (x *IsBackendEnabledRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

type IsBackendEnabledReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInitialized bool `protobuf:"varint,1,opt,name=isInitialized,proto3" json:"isInitialized,omitempty"`
}

func (x *IsBackendEnabledReply) Reset() {
	*x = IsBackendEnabledReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsBackendEnabledReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsBackendEnabledReply) ProtoMessage() {}

func (x *IsBackendEnabledReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsBackendEnabledReply.ProtoReflect.Descriptor instead.
func (*IsBackendEnabledReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{19}
}

func (x *IsBackendEnabledReply) GetIsInitialized() bool {
	if x != nil {
		return x.IsInitialized
	}
	return false
}

type RestartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestartRequest) Reset() {
	*x = RestartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartRequest) ProtoMessage() {}

func (x *RestartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartRequest.ProtoReflect.Descriptor instead.
func (*RestartRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{20}
}

type RestartReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestartReply) Reset() {
	*x = RestartReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartReply) ProtoMessage() {}

func (x *RestartReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartReply.ProtoReflect.Descriptor instead.
func (*RestartReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{21}
}

type SetTitleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *SetTitleRequest) Reset() {
	*x = SetTitleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTitleRequest) ProtoMessage() {}

func (x *SetTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTitleRequest.ProtoReflect.Descriptor instead.
func (*SetTitleRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{22}
}

func (x *SetTitleRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

func (x *SetTitleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type SetTitleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetTitleReply) Reset() {
	*x = SetTitleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTitleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTitleReply) ProtoMessage() {}

func (x *SetTitleReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTitleReply.ProtoReflect.Descriptor instead.
func (*SetTitleReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{23}
}

type SetDescriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID      string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *SetDescriptionRequest) Reset() {
	*x = SetDescriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDescriptionRequest) ProtoMessage() {}

func (x *SetDescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDescriptionRequest.ProtoReflect.Descriptor instead.
func (*SetDescriptionRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{24}
}

func (x *SetDescriptionRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

func (x *SetDescriptionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SetDescriptionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDescriptionReply) Reset() {
	*x = SetDescriptionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDescriptionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDescriptionReply) ProtoMessage() {}

func (x *SetDescriptionReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDescriptionReply.ProtoReflect.Descriptor instead.
func (*SetDescriptionReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{25}
}

type ApplyProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID  string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
	Profile string `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *ApplyProfileRequest) Reset() {
	*x = ApplyProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyProfileRequest) ProtoMessage() {}

func (x *ApplyProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyProfileRequest.ProtoReflect.Descriptor instead.
func (*ApplyProfileRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{26}
}

func (x *ApplyProfileRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

func (x *ApplyProfileRequest) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

type ApplyProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApplyProfileReply) Reset() {
	*x = ApplyProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyProfileReply) ProtoMessage() {}

func (x *ApplyProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyProfileReply.ProtoReflect.Descriptor instead.
func (*ApplyProfileReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{27}
}

type UpdateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID      string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Profile     string `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *UpdateStreamRequest) Reset() {
	*x = UpdateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamRequest) ProtoMessage() {}

func (x *UpdateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamRequest.ProtoReflect.Descriptor instead.
func (*UpdateStreamRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateStreamRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

func (x *UpdateStreamRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateStreamRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateStreamRequest) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

type UpdateStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStreamReply) Reset() {
	*x = UpdateStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamReply) ProtoMessage() {}

func (x *UpdateStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamReply.ProtoReflect.Descriptor instead.
func (*UpdateStreamReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{29}
}

type EXPERIMENTAL_ReinitStreamControllersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EXPERIMENTAL_ReinitStreamControllersRequest) Reset() {
	*x = EXPERIMENTAL_ReinitStreamControllersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EXPERIMENTAL_ReinitStreamControllersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EXPERIMENTAL_ReinitStreamControllersRequest) ProtoMessage() {}

func (x *EXPERIMENTAL_ReinitStreamControllersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EXPERIMENTAL_ReinitStreamControllersRequest.ProtoReflect.Descriptor instead.
func (*EXPERIMENTAL_ReinitStreamControllersRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{30}
}

type EXPERIMENTAL_ReinitStreamControllersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EXPERIMENTAL_ReinitStreamControllersReply) Reset() {
	*x = EXPERIMENTAL_ReinitStreamControllersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EXPERIMENTAL_ReinitStreamControllersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EXPERIMENTAL_ReinitStreamControllersReply) ProtoMessage() {}

func (x *EXPERIMENTAL_ReinitStreamControllersReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EXPERIMENTAL_ReinitStreamControllersReply.ProtoReflect.Descriptor instead.
func (*EXPERIMENTAL_ReinitStreamControllersReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{31}
}

type OBSOLETE_FetchConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OBSOLETE_FetchConfigRequest) Reset() {
	*x = OBSOLETE_FetchConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSOLETE_FetchConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSOLETE_FetchConfigRequest) ProtoMessage() {}

func (x *OBSOLETE_FetchConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSOLETE_FetchConfigRequest.ProtoReflect.Descriptor instead.
func (*OBSOLETE_FetchConfigRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{32}
}

type OBSOLETE_FetchConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OBSOLETE_FetchConfigReply) Reset() {
	*x = OBSOLETE_FetchConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSOLETE_FetchConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSOLETE_FetchConfigReply) ProtoMessage() {}

func (x *OBSOLETE_FetchConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSOLETE_FetchConfigReply.ProtoReflect.Descriptor instead.
func (*OBSOLETE_FetchConfigReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{33}
}

type OBSOLETE_GetGitInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OBSOLETE_GetGitInfoRequest) Reset() {
	*x = OBSOLETE_GetGitInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSOLETE_GetGitInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSOLETE_GetGitInfoRequest) ProtoMessage() {}

func (x *OBSOLETE_GetGitInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSOLETE_GetGitInfoRequest.ProtoReflect.Descriptor instead.
func (*OBSOLETE_GetGitInfoRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{34}
}

type OBSOLETE_GetGitInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInitialized bool `protobuf:"varint,1,opt,name=isInitialized,proto3" json:"isInitialized,omitempty"`
}

func (x *OBSOLETE_GetGitInfoReply) Reset() {
	*x = OBSOLETE_GetGitInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSOLETE_GetGitInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSOLETE_GetGitInfoReply) ProtoMessage() {}

func (x *OBSOLETE_GetGitInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSOLETE_GetGitInfoReply.ProtoReflect.Descriptor instead.
func (*OBSOLETE_GetGitInfoReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{35}
}

func (x *OBSOLETE_GetGitInfoReply) GetIsInitialized() bool {
	if x != nil {
		return x.IsInitialized
	}
	return false
}

type OBSOLETE_GitReloginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OBSOLETE_GitReloginRequest) Reset() {
	*x = OBSOLETE_GitReloginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSOLETE_GitReloginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSOLETE_GitReloginRequest) ProtoMessage() {}

func (x *OBSOLETE_GitReloginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSOLETE_GitReloginRequest.ProtoReflect.Descriptor instead.
func (*OBSOLETE_GitReloginRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{36}
}

type OBSOLETE_GitReloginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OBSOLETE_GitReloginReply) Reset() {
	*x = OBSOLETE_GitReloginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSOLETE_GitReloginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSOLETE_GitReloginReply) ProtoMessage() {}

func (x *OBSOLETE_GitReloginReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSOLETE_GitReloginReply.ProtoReflect.Descriptor instead.
func (*OBSOLETE_GitReloginReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{37}
}

type SubscribeToOAuthRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenPort int32 `protobuf:"varint,1,opt,name=listenPort,proto3" json:"listenPort,omitempty"`
}

func (x *SubscribeToOAuthRequestsRequest) Reset() {
	*x = SubscribeToOAuthRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToOAuthRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToOAuthRequestsRequest) ProtoMessage() {}

func (x *SubscribeToOAuthRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToOAuthRequestsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToOAuthRequestsRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{38}
}

func (x *SubscribeToOAuthRequestsRequest) GetListenPort() int32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

type OAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID  string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
	AuthURL string `protobuf:"bytes,2,opt,name=authURL,proto3" json:"authURL,omitempty"`
}

func (x *OAuthRequest) Reset() {
	*x = OAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthRequest) ProtoMessage() {}

func (x *OAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthRequest.ProtoReflect.Descriptor instead.
func (*OAuthRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{39}
}

func (x *OAuthRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

func (x *OAuthRequest) GetAuthURL() string {
	if x != nil {
		return x.AuthURL
	}
	return ""
}

type GetVariableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetVariableRequest) Reset() {
	*x = GetVariableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariableRequest) ProtoMessage() {}

func (x *GetVariableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariableRequest.ProtoReflect.Descriptor instead.
func (*GetVariableRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{40}
}

func (x *GetVariableRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetVariableReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetVariableReply) Reset() {
	*x = GetVariableReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariableReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariableReply) ProtoMessage() {}

func (x *GetVariableReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariableReply.ProtoReflect.Descriptor instead.
func (*GetVariableReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{41}
}

func (x *GetVariableReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetVariableReply) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetVariableHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HashType HashType `protobuf:"varint,2,opt,name=hashType,proto3,enum=streamd.HashType" json:"hashType,omitempty"`
}

func (x *GetVariableHashRequest) Reset() {
	*x = GetVariableHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariableHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariableHashRequest) ProtoMessage() {}

func (x *GetVariableHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariableHashRequest.ProtoReflect.Descriptor instead.
func (*GetVariableHashRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{42}
}

func (x *GetVariableHashRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetVariableHashRequest) GetHashType() HashType {
	if x != nil {
		return x.HashType
	}
	return HashType_HASH_SHA1
}

type GetVariableHashReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	HashType HashType `protobuf:"varint,2,opt,name=hashType,proto3,enum=streamd.HashType" json:"hashType,omitempty"`
	Hash     []byte   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetVariableHashReply) Reset() {
	*x = GetVariableHashReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVariableHashReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVariableHashReply) ProtoMessage() {}

func (x *GetVariableHashReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVariableHashReply.ProtoReflect.Descriptor instead.
func (*GetVariableHashReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{43}
}

func (x *GetVariableHashReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetVariableHashReply) GetHashType() HashType {
	if x != nil {
		return x.HashType
	}
	return HashType_HASH_SHA1
}

func (x *GetVariableHashReply) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type SetVariableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetVariableRequest) Reset() {
	*x = SetVariableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVariableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVariableRequest) ProtoMessage() {}

func (x *SetVariableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVariableRequest.ProtoReflect.Descriptor instead.
func (*SetVariableRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{44}
}

func (x *SetVariableRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetVariableRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SetVariableReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetVariableReply) Reset() {
	*x = SetVariableReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVariableReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVariableReply) ProtoMessage() {}

func (x *SetVariableReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVariableReply.ProtoReflect.Descriptor instead.
func (*SetVariableReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{45}
}

type OBSGetSceneListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OBSGetSceneListRequest) Reset() {
	*x = OBSGetSceneListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSGetSceneListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSGetSceneListRequest) ProtoMessage() {}

func (x *OBSGetSceneListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSGetSceneListRequest.ProtoReflect.Descriptor instead.
func (*OBSGetSceneListRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{46}
}

type OBSScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Index int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OBSScene) Reset() {
	*x = OBSScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSScene) ProtoMessage() {}

func (x *OBSScene) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSScene.ProtoReflect.Descriptor instead.
func (*OBSScene) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{47}
}

func (x *OBSScene) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *OBSScene) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *OBSScene) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OBSGetSceneListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPreviewSceneName string      `protobuf:"bytes,1,opt,name=currentPreviewSceneName,proto3" json:"currentPreviewSceneName,omitempty"`
	CurrentPreviewSceneUUID string      `protobuf:"bytes,2,opt,name=currentPreviewSceneUUID,proto3" json:"currentPreviewSceneUUID,omitempty"`
	CurrentProgramSceneName string      `protobuf:"bytes,3,opt,name=currentProgramSceneName,proto3" json:"currentProgramSceneName,omitempty"`
	CurrentProgramSceneUUID string      `protobuf:"bytes,4,opt,name=currentProgramSceneUUID,proto3" json:"currentProgramSceneUUID,omitempty"`
	Scenes                  []*OBSScene `protobuf:"bytes,5,rep,name=scenes,proto3" json:"scenes,omitempty"`
}

func (x *OBSGetSceneListReply) Reset() {
	*x = OBSGetSceneListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSGetSceneListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSGetSceneListReply) ProtoMessage() {}

func (x *OBSGetSceneListReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSGetSceneListReply.ProtoReflect.Descriptor instead.
func (*OBSGetSceneListReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{48}
}

func (x *OBSGetSceneListReply) GetCurrentPreviewSceneName() string {
	if x != nil {
		return x.CurrentPreviewSceneName
	}
	return ""
}

func (x *OBSGetSceneListReply) GetCurrentPreviewSceneUUID() string {
	if x != nil {
		return x.CurrentPreviewSceneUUID
	}
	return ""
}

func (x *OBSGetSceneListReply) GetCurrentProgramSceneName() string {
	if x != nil {
		return x.CurrentProgramSceneName
	}
	return ""
}

func (x *OBSGetSceneListReply) GetCurrentProgramSceneUUID() string {
	if x != nil {
		return x.CurrentProgramSceneUUID
	}
	return ""
}

func (x *OBSGetSceneListReply) GetScenes() []*OBSScene {
	if x != nil {
		return x.Scenes
	}
	return nil
}

type OBSSetCurrentProgramSceneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OBSSceneID:
	//
	//	*OBSSetCurrentProgramSceneRequest_SceneName
	//	*OBSSetCurrentProgramSceneRequest_SceneUUID
	OBSSceneID isOBSSetCurrentProgramSceneRequest_OBSSceneID `protobuf_oneof:"OBSSceneID"`
}

func (x *OBSSetCurrentProgramSceneRequest) Reset() {
	*x = OBSSetCurrentProgramSceneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSSetCurrentProgramSceneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSSetCurrentProgramSceneRequest) ProtoMessage() {}

func (x *OBSSetCurrentProgramSceneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSSetCurrentProgramSceneRequest.ProtoReflect.Descriptor instead.
func (*OBSSetCurrentProgramSceneRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{49}
}

func (m *OBSSetCurrentProgramSceneRequest) GetOBSSceneID() isOBSSetCurrentProgramSceneRequest_OBSSceneID {
	if m != nil {
		return m.OBSSceneID
	}
	return nil
}

func (x *OBSSetCurrentProgramSceneRequest) GetSceneName() string {
	if x, ok := x.GetOBSSceneID().(*OBSSetCurrentProgramSceneRequest_SceneName); ok {
		return x.SceneName
	}
	return ""
}

func (x *OBSSetCurrentProgramSceneRequest) GetSceneUUID() string {
	if x, ok := x.GetOBSSceneID().(*OBSSetCurrentProgramSceneRequest_SceneUUID); ok {
		return x.SceneUUID
	}
	return ""
}

type isOBSSetCurrentProgramSceneRequest_OBSSceneID interface {
	isOBSSetCurrentProgramSceneRequest_OBSSceneID()
}

type OBSSetCurrentProgramSceneRequest_SceneName struct {
	SceneName string `protobuf:"bytes,1,opt,name=sceneName,proto3,oneof"`
}

type OBSSetCurrentProgramSceneRequest_SceneUUID struct {
	SceneUUID string `protobuf:"bytes,2,opt,name=sceneUUID,proto3,oneof"`
}

func (*OBSSetCurrentProgramSceneRequest_SceneName) isOBSSetCurrentProgramSceneRequest_OBSSceneID() {}

func (*OBSSetCurrentProgramSceneRequest_SceneUUID) isOBSSetCurrentProgramSceneRequest_OBSSceneID() {}

type OBSSetCurrentProgramSceneReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OBSSetCurrentProgramSceneReply) Reset() {
	*x = OBSSetCurrentProgramSceneReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OBSSetCurrentProgramSceneReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OBSSetCurrentProgramSceneReply) ProtoMessage() {}

func (x *OBSSetCurrentProgramSceneReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OBSSetCurrentProgramSceneReply.ProtoReflect.Descriptor instead.
func (*OBSSetCurrentProgramSceneReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{50}
}

type SubmitOAuthCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatID string `protobuf:"bytes,1,opt,name=platID,proto3" json:"platID,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SubmitOAuthCodeRequest) Reset() {
	*x = SubmitOAuthCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitOAuthCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOAuthCodeRequest) ProtoMessage() {}

func (x *SubmitOAuthCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOAuthCodeRequest.ProtoReflect.Descriptor instead.
func (*SubmitOAuthCodeRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{51}
}

func (x *SubmitOAuthCodeRequest) GetPlatID() string {
	if x != nil {
		return x.PlatID
	}
	return ""
}

func (x *SubmitOAuthCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SubmitOAuthCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitOAuthCodeReply) Reset() {
	*x = SubmitOAuthCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitOAuthCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOAuthCodeReply) ProtoMessage() {}

func (x *SubmitOAuthCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOAuthCodeReply.ProtoReflect.Descriptor instead.
func (*SubmitOAuthCodeReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{52}
}

type StreamServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerType StreamServerType `protobuf:"varint,1,opt,name=serverType,proto3,enum=streamd.StreamServerType" json:"serverType,omitempty"`
	ListenAddr string           `protobuf:"bytes,2,opt,name=listenAddr,proto3" json:"listenAddr,omitempty"`
}

func (x *StreamServer) Reset() {
	*x = StreamServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServer) ProtoMessage() {}

func (x *StreamServer) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServer.ProtoReflect.Descriptor instead.
func (*StreamServer) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{53}
}

func (x *StreamServer) GetServerType() StreamServerType {
	if x != nil {
		return x.ServerType
	}
	return StreamServerType_Undefined
}

func (x *StreamServer) GetListenAddr() string {
	if x != nil {
		return x.ListenAddr
	}
	return ""
}

type StreamServerStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumBytesConsumerWrote int64 `protobuf:"varint,1,opt,name=NumBytesConsumerWrote,proto3" json:"NumBytesConsumerWrote,omitempty"`
	NumBytesProducerRead  int64 `protobuf:"varint,2,opt,name=NumBytesProducerRead,proto3" json:"NumBytesProducerRead,omitempty"`
}

func (x *StreamServerStatistics) Reset() {
	*x = StreamServerStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServerStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServerStatistics) ProtoMessage() {}

func (x *StreamServerStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServerStatistics.ProtoReflect.Descriptor instead.
func (*StreamServerStatistics) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{54}
}

func (x *StreamServerStatistics) GetNumBytesConsumerWrote() int64 {
	if x != nil {
		return x.NumBytesConsumerWrote
	}
	return 0
}

func (x *StreamServerStatistics) GetNumBytesProducerRead() int64 {
	if x != nil {
		return x.NumBytesProducerRead
	}
	return 0
}

type StreamServerWithStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config     *StreamServer           `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Statistics *StreamServerStatistics `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *StreamServerWithStatistics) Reset() {
	*x = StreamServerWithStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServerWithStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServerWithStatistics) ProtoMessage() {}

func (x *StreamServerWithStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServerWithStatistics.ProtoReflect.Descriptor instead.
func (*StreamServerWithStatistics) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{55}
}

func (x *StreamServerWithStatistics) GetConfig() *StreamServer {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *StreamServerWithStatistics) GetStatistics() *StreamServerStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type ListStreamServersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStreamServersRequest) Reset() {
	*x = ListStreamServersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamServersRequest) ProtoMessage() {}

func (x *ListStreamServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamServersRequest.ProtoReflect.Descriptor instead.
func (*ListStreamServersRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{56}
}

type ListStreamServersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamServers []*StreamServerWithStatistics `protobuf:"bytes,1,rep,name=streamServers,proto3" json:"streamServers,omitempty"`
}

func (x *ListStreamServersReply) Reset() {
	*x = ListStreamServersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamServersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamServersReply) ProtoMessage() {}

func (x *ListStreamServersReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamServersReply.ProtoReflect.Descriptor instead.
func (*ListStreamServersReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{57}
}

func (x *ListStreamServersReply) GetStreamServers() []*StreamServerWithStatistics {
	if x != nil {
		return x.StreamServers
	}
	return nil
}

type StartStreamServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *StreamServer `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *StartStreamServerRequest) Reset() {
	*x = StartStreamServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStreamServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamServerRequest) ProtoMessage() {}

func (x *StartStreamServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamServerRequest.ProtoReflect.Descriptor instead.
func (*StartStreamServerRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{58}
}

func (x *StartStreamServerRequest) GetConfig() *StreamServer {
	if x != nil {
		return x.Config
	}
	return nil
}

type StartStreamServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartStreamServerReply) Reset() {
	*x = StartStreamServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStreamServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStreamServerReply) ProtoMessage() {}

func (x *StartStreamServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStreamServerReply.ProtoReflect.Descriptor instead.
func (*StartStreamServerReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{59}
}

type StopStreamServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenAddr string `protobuf:"bytes,1,opt,name=listenAddr,proto3" json:"listenAddr,omitempty"`
}

func (x *StopStreamServerRequest) Reset() {
	*x = StopStreamServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopStreamServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopStreamServerRequest) ProtoMessage() {}

func (x *StopStreamServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopStreamServerRequest.ProtoReflect.Descriptor instead.
func (*StopStreamServerRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{60}
}

func (x *StopStreamServerRequest) GetListenAddr() string {
	if x != nil {
		return x.ListenAddr
	}
	return ""
}

type StopStreamServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopStreamServerReply) Reset() {
	*x = StopStreamServerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopStreamServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopStreamServerReply) ProtoMessage() {}

func (x *StopStreamServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopStreamServerReply.ProtoReflect.Descriptor instead.
func (*StopStreamServerReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{61}
}

type StreamDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationID string `protobuf:"bytes,1,opt,name=destinationID,proto3" json:"destinationID,omitempty"`
	Url           string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *StreamDestination) Reset() {
	*x = StreamDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDestination) ProtoMessage() {}

func (x *StreamDestination) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDestination.ProtoReflect.Descriptor instead.
func (*StreamDestination) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{62}
}

func (x *StreamDestination) GetDestinationID() string {
	if x != nil {
		return x.DestinationID
	}
	return ""
}

func (x *StreamDestination) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ListStreamDestinationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStreamDestinationsRequest) Reset() {
	*x = ListStreamDestinationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamDestinationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamDestinationsRequest) ProtoMessage() {}

func (x *ListStreamDestinationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamDestinationsRequest.ProtoReflect.Descriptor instead.
func (*ListStreamDestinationsRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{63}
}

type ListStreamDestinationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamDestinations []*StreamDestination `protobuf:"bytes,1,rep,name=streamDestinations,proto3" json:"streamDestinations,omitempty"`
}

func (x *ListStreamDestinationsReply) Reset() {
	*x = ListStreamDestinationsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamDestinationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamDestinationsReply) ProtoMessage() {}

func (x *ListStreamDestinationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamDestinationsReply.ProtoReflect.Descriptor instead.
func (*ListStreamDestinationsReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{64}
}

func (x *ListStreamDestinationsReply) GetStreamDestinations() []*StreamDestination {
	if x != nil {
		return x.StreamDestinations
	}
	return nil
}

type AddStreamDestinationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *StreamDestination `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *AddStreamDestinationRequest) Reset() {
	*x = AddStreamDestinationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStreamDestinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStreamDestinationRequest) ProtoMessage() {}

func (x *AddStreamDestinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStreamDestinationRequest.ProtoReflect.Descriptor instead.
func (*AddStreamDestinationRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{65}
}

func (x *AddStreamDestinationRequest) GetConfig() *StreamDestination {
	if x != nil {
		return x.Config
	}
	return nil
}

type AddStreamDestinationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddStreamDestinationReply) Reset() {
	*x = AddStreamDestinationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStreamDestinationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStreamDestinationReply) ProtoMessage() {}

func (x *AddStreamDestinationReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStreamDestinationReply.ProtoReflect.Descriptor instead.
func (*AddStreamDestinationReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{66}
}

type RemoveStreamDestinationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationID string `protobuf:"bytes,1,opt,name=destinationID,proto3" json:"destinationID,omitempty"`
}

func (x *RemoveStreamDestinationRequest) Reset() {
	*x = RemoveStreamDestinationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStreamDestinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStreamDestinationRequest) ProtoMessage() {}

func (x *RemoveStreamDestinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStreamDestinationRequest.ProtoReflect.Descriptor instead.
func (*RemoveStreamDestinationRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{67}
}

func (x *RemoveStreamDestinationRequest) GetDestinationID() string {
	if x != nil {
		return x.DestinationID
	}
	return ""
}

type RemoveStreamDestinationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveStreamDestinationReply) Reset() {
	*x = RemoveStreamDestinationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStreamDestinationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStreamDestinationReply) ProtoMessage() {}

func (x *RemoveStreamDestinationReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStreamDestinationReply.ProtoReflect.Descriptor instead.
func (*RemoveStreamDestinationReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{68}
}

type IncomingStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *IncomingStream) Reset() {
	*x = IncomingStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomingStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomingStream) ProtoMessage() {}

func (x *IncomingStream) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomingStream.ProtoReflect.Descriptor instead.
func (*IncomingStream) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{69}
}

func (x *IncomingStream) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

type AddIncomingStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *AddIncomingStreamRequest) Reset() {
	*x = AddIncomingStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIncomingStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIncomingStreamRequest) ProtoMessage() {}

func (x *AddIncomingStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIncomingStreamRequest.ProtoReflect.Descriptor instead.
func (*AddIncomingStreamRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{70}
}

func (x *AddIncomingStreamRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

type AddIncomingStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddIncomingStreamReply) Reset() {
	*x = AddIncomingStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIncomingStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIncomingStreamReply) ProtoMessage() {}

func (x *AddIncomingStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIncomingStreamReply.ProtoReflect.Descriptor instead.
func (*AddIncomingStreamReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{71}
}

type RemoveIncomingStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *RemoveIncomingStreamRequest) Reset() {
	*x = RemoveIncomingStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveIncomingStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveIncomingStreamRequest) ProtoMessage() {}

func (x *RemoveIncomingStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveIncomingStreamRequest.ProtoReflect.Descriptor instead.
func (*RemoveIncomingStreamRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{72}
}

func (x *RemoveIncomingStreamRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

type RemoveIncomingStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveIncomingStreamReply) Reset() {
	*x = RemoveIncomingStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveIncomingStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveIncomingStreamReply) ProtoMessage() {}

func (x *RemoveIncomingStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveIncomingStreamReply.ProtoReflect.Descriptor instead.
func (*RemoveIncomingStreamReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{73}
}

type ListIncomingStreamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListIncomingStreamsRequest) Reset() {
	*x = ListIncomingStreamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIncomingStreamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIncomingStreamsRequest) ProtoMessage() {}

func (x *ListIncomingStreamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIncomingStreamsRequest.ProtoReflect.Descriptor instead.
func (*ListIncomingStreamsRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{74}
}

type ListIncomingStreamsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncomingStreams []*IncomingStream `protobuf:"bytes,1,rep,name=incomingStreams,proto3" json:"incomingStreams,omitempty"`
}

func (x *ListIncomingStreamsReply) Reset() {
	*x = ListIncomingStreamsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIncomingStreamsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIncomingStreamsReply) ProtoMessage() {}

func (x *ListIncomingStreamsReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIncomingStreamsReply.ProtoReflect.Descriptor instead.
func (*ListIncomingStreamsReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{75}
}

func (x *ListIncomingStreamsReply) GetIncomingStreams() []*IncomingStream {
	if x != nil {
		return x.IncomingStreams
	}
	return nil
}

type RestartUntilYoutubeRecognizesStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled        bool    `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	StartTimeout   float64 `protobuf:"fixed64,2,opt,name=startTimeout,proto3" json:"startTimeout,omitempty"`
	StopStartDelay float64 `protobuf:"fixed64,3,opt,name=stopStartDelay,proto3" json:"stopStartDelay,omitempty"`
}

func (x *RestartUntilYoutubeRecognizesStream) Reset() {
	*x = RestartUntilYoutubeRecognizesStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartUntilYoutubeRecognizesStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartUntilYoutubeRecognizesStream) ProtoMessage() {}

func (x *RestartUntilYoutubeRecognizesStream) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartUntilYoutubeRecognizesStream.ProtoReflect.Descriptor instead.
func (*RestartUntilYoutubeRecognizesStream) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{76}
}

func (x *RestartUntilYoutubeRecognizesStream) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RestartUntilYoutubeRecognizesStream) GetStartTimeout() float64 {
	if x != nil {
		return x.StartTimeout
	}
	return 0
}

func (x *RestartUntilYoutubeRecognizesStream) GetStopStartDelay() float64 {
	if x != nil {
		return x.StopStartDelay
	}
	return 0
}

type StreamForwardQuirks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestartUntilYoutubeRecognizesStream *RestartUntilYoutubeRecognizesStream `protobuf:"bytes,1,opt,name=restartUntilYoutubeRecognizesStream,proto3" json:"restartUntilYoutubeRecognizesStream,omitempty"`
}

func (x *StreamForwardQuirks) Reset() {
	*x = StreamForwardQuirks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamForwardQuirks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamForwardQuirks) ProtoMessage() {}

func (x *StreamForwardQuirks) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamForwardQuirks.ProtoReflect.Descriptor instead.
func (*StreamForwardQuirks) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{77}
}

func (x *StreamForwardQuirks) GetRestartUntilYoutubeRecognizesStream() *RestartUntilYoutubeRecognizesStream {
	if x != nil {
		return x.RestartUntilYoutubeRecognizesStream
	}
	return nil
}

type StreamForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID      string               `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	DestinationID string               `protobuf:"bytes,2,opt,name=destinationID,proto3" json:"destinationID,omitempty"`
	Enabled       bool                 `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Quirks        *StreamForwardQuirks `protobuf:"bytes,4,opt,name=quirks,proto3" json:"quirks,omitempty"`
}

func (x *StreamForward) Reset() {
	*x = StreamForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamForward) ProtoMessage() {}

func (x *StreamForward) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamForward.ProtoReflect.Descriptor instead.
func (*StreamForward) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{78}
}

func (x *StreamForward) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamForward) GetDestinationID() string {
	if x != nil {
		return x.DestinationID
	}
	return ""
}

func (x *StreamForward) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *StreamForward) GetQuirks() *StreamForwardQuirks {
	if x != nil {
		return x.Quirks
	}
	return nil
}

type StreamForwardStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumBytesWrote int64 `protobuf:"varint,1,opt,name=numBytesWrote,proto3" json:"numBytesWrote,omitempty"`
	NumBytesRead  int64 `protobuf:"varint,2,opt,name=numBytesRead,proto3" json:"numBytesRead,omitempty"`
}

func (x *StreamForwardStatistics) Reset() {
	*x = StreamForwardStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamForwardStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamForwardStatistics) ProtoMessage() {}

func (x *StreamForwardStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamForwardStatistics.ProtoReflect.Descriptor instead.
func (*StreamForwardStatistics) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{79}
}

func (x *StreamForwardStatistics) GetNumBytesWrote() int64 {
	if x != nil {
		return x.NumBytesWrote
	}
	return 0
}

func (x *StreamForwardStatistics) GetNumBytesRead() int64 {
	if x != nil {
		return x.NumBytesRead
	}
	return 0
}

type StreamForwardWithStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config     *StreamForward           `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Statistics *StreamForwardStatistics `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *StreamForwardWithStatistics) Reset() {
	*x = StreamForwardWithStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamForwardWithStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamForwardWithStatistics) ProtoMessage() {}

func (x *StreamForwardWithStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamForwardWithStatistics.ProtoReflect.Descriptor instead.
func (*StreamForwardWithStatistics) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{80}
}

func (x *StreamForwardWithStatistics) GetConfig() *StreamForward {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *StreamForwardWithStatistics) GetStatistics() *StreamForwardStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type ListStreamForwardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStreamForwardsRequest) Reset() {
	*x = ListStreamForwardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamForwardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamForwardsRequest) ProtoMessage() {}

func (x *ListStreamForwardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamForwardsRequest.ProtoReflect.Descriptor instead.
func (*ListStreamForwardsRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{81}
}

type ListStreamForwardsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamForwards []*StreamForwardWithStatistics `protobuf:"bytes,1,rep,name=streamForwards,proto3" json:"streamForwards,omitempty"`
}

func (x *ListStreamForwardsReply) Reset() {
	*x = ListStreamForwardsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamForwardsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamForwardsReply) ProtoMessage() {}

func (x *ListStreamForwardsReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamForwardsReply.ProtoReflect.Descriptor instead.
func (*ListStreamForwardsReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{82}
}

func (x *ListStreamForwardsReply) GetStreamForwards() []*StreamForwardWithStatistics {
	if x != nil {
		return x.StreamForwards
	}
	return nil
}

type AddStreamForwardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *StreamForward `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *AddStreamForwardRequest) Reset() {
	*x = AddStreamForwardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStreamForwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStreamForwardRequest) ProtoMessage() {}

func (x *AddStreamForwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStreamForwardRequest.ProtoReflect.Descriptor instead.
func (*AddStreamForwardRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{83}
}

func (x *AddStreamForwardRequest) GetConfig() *StreamForward {
	if x != nil {
		return x.Config
	}
	return nil
}

type AddStreamForwardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddStreamForwardReply) Reset() {
	*x = AddStreamForwardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStreamForwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStreamForwardReply) ProtoMessage() {}

func (x *AddStreamForwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStreamForwardReply.ProtoReflect.Descriptor instead.
func (*AddStreamForwardReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{84}
}

type UpdateStreamForwardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *StreamForward `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *UpdateStreamForwardRequest) Reset() {
	*x = UpdateStreamForwardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamForwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamForwardRequest) ProtoMessage() {}

func (x *UpdateStreamForwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamForwardRequest.ProtoReflect.Descriptor instead.
func (*UpdateStreamForwardRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{85}
}

func (x *UpdateStreamForwardRequest) GetConfig() *StreamForward {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateStreamForwardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStreamForwardReply) Reset() {
	*x = UpdateStreamForwardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamForwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamForwardReply) ProtoMessage() {}

func (x *UpdateStreamForwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamForwardReply.ProtoReflect.Descriptor instead.
func (*UpdateStreamForwardReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{86}
}

type RemoveStreamForwardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *StreamForward `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *RemoveStreamForwardRequest) Reset() {
	*x = RemoveStreamForwardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStreamForwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStreamForwardRequest) ProtoMessage() {}

func (x *RemoveStreamForwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStreamForwardRequest.ProtoReflect.Descriptor instead.
func (*RemoveStreamForwardRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{87}
}

func (x *RemoveStreamForwardRequest) GetConfig() *StreamForward {
	if x != nil {
		return x.Config
	}
	return nil
}

type RemoveStreamForwardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveStreamForwardReply) Reset() {
	*x = RemoveStreamForwardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStreamForwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStreamForwardReply) ProtoMessage() {}

func (x *RemoveStreamForwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStreamForwardReply.ProtoReflect.Descriptor instead.
func (*RemoveStreamForwardReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{88}
}

type WaitForStreamPublisherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID *string `protobuf:"bytes,1,opt,name=streamID,proto3,oneof" json:"streamID,omitempty"`
}

func (x *WaitForStreamPublisherRequest) Reset() {
	*x = WaitForStreamPublisherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForStreamPublisherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForStreamPublisherRequest) ProtoMessage() {}

func (x *WaitForStreamPublisherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForStreamPublisherRequest.ProtoReflect.Descriptor instead.
func (*WaitForStreamPublisherRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{89}
}

func (x *WaitForStreamPublisherRequest) GetStreamID() string {
	if x != nil && x.StreamID != nil {
		return *x.StreamID
	}
	return ""
}

type StreamPublisher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamPublisher) Reset() {
	*x = StreamPublisher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPublisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPublisher) ProtoMessage() {}

func (x *StreamPublisher) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPublisher.ProtoReflect.Descriptor instead.
func (*StreamPublisher) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{90}
}

type StreamPlaybackConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JitterBufDurationSecs float64 `protobuf:"fixed64,1,opt,name=JitterBufDurationSecs,proto3" json:"JitterBufDurationSecs,omitempty"`
	CatchupMaxSpeedFactor float64 `protobuf:"fixed64,2,opt,name=CatchupMaxSpeedFactor,proto3" json:"CatchupMaxSpeedFactor,omitempty"`
	MaxCatchupAtLagSecs   float64 `protobuf:"fixed64,3,opt,name=MaxCatchupAtLagSecs,proto3" json:"MaxCatchupAtLagSecs,omitempty"`
	StartTimeoutSecs      float64 `protobuf:"fixed64,4,opt,name=StartTimeoutSecs,proto3" json:"StartTimeoutSecs,omitempty"`
	ReadTimeoutSecs       float64 `protobuf:"fixed64,5,opt,name=ReadTimeoutSecs,proto3" json:"ReadTimeoutSecs,omitempty"`
}

func (x *StreamPlaybackConfig) Reset() {
	*x = StreamPlaybackConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlaybackConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlaybackConfig) ProtoMessage() {}

func (x *StreamPlaybackConfig) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlaybackConfig.ProtoReflect.Descriptor instead.
func (*StreamPlaybackConfig) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{91}
}

func (x *StreamPlaybackConfig) GetJitterBufDurationSecs() float64 {
	if x != nil {
		return x.JitterBufDurationSecs
	}
	return 0
}

func (x *StreamPlaybackConfig) GetCatchupMaxSpeedFactor() float64 {
	if x != nil {
		return x.CatchupMaxSpeedFactor
	}
	return 0
}

func (x *StreamPlaybackConfig) GetMaxCatchupAtLagSecs() float64 {
	if x != nil {
		return x.MaxCatchupAtLagSecs
	}
	return 0
}

func (x *StreamPlaybackConfig) GetStartTimeoutSecs() float64 {
	if x != nil {
		return x.StartTimeoutSecs
	}
	return 0
}

func (x *StreamPlaybackConfig) GetReadTimeoutSecs() float64 {
	if x != nil {
		return x.ReadTimeoutSecs
	}
	return 0
}

type StreamPlayerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID             string                `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	PlayerType           PlayerType            `protobuf:"varint,2,opt,name=playerType,proto3,enum=streamd.PlayerType" json:"playerType,omitempty"`
	Disabled             bool                  `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	StreamPlaybackConfig *StreamPlaybackConfig `protobuf:"bytes,4,opt,name=streamPlaybackConfig,proto3" json:"streamPlaybackConfig,omitempty"`
}

func (x *StreamPlayerConfig) Reset() {
	*x = StreamPlayerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerConfig) ProtoMessage() {}

func (x *StreamPlayerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerConfig.ProtoReflect.Descriptor instead.
func (*StreamPlayerConfig) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{92}
}

func (x *StreamPlayerConfig) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerConfig) GetPlayerType() PlayerType {
	if x != nil {
		return x.PlayerType
	}
	return PlayerType_PlayerTypeAuto
}

func (x *StreamPlayerConfig) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *StreamPlayerConfig) GetStreamPlaybackConfig() *StreamPlaybackConfig {
	if x != nil {
		return x.StreamPlaybackConfig
	}
	return nil
}

type AddStreamPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *StreamPlayerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *AddStreamPlayerRequest) Reset() {
	*x = AddStreamPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStreamPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStreamPlayerRequest) ProtoMessage() {}

func (x *AddStreamPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStreamPlayerRequest.ProtoReflect.Descriptor instead.
func (*AddStreamPlayerRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{93}
}

func (x *AddStreamPlayerRequest) GetConfig() *StreamPlayerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type AddStreamPlayerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddStreamPlayerReply) Reset() {
	*x = AddStreamPlayerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStreamPlayerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStreamPlayerReply) ProtoMessage() {}

func (x *AddStreamPlayerReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStreamPlayerReply.ProtoReflect.Descriptor instead.
func (*AddStreamPlayerReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{94}
}

type RemoveStreamPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *RemoveStreamPlayerRequest) Reset() {
	*x = RemoveStreamPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStreamPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStreamPlayerRequest) ProtoMessage() {}

func (x *RemoveStreamPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStreamPlayerRequest.ProtoReflect.Descriptor instead.
func (*RemoveStreamPlayerRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{95}
}

func (x *RemoveStreamPlayerRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

type RemoveStreamPlayerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveStreamPlayerReply) Reset() {
	*x = RemoveStreamPlayerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStreamPlayerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStreamPlayerReply) ProtoMessage() {}

func (x *RemoveStreamPlayerReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStreamPlayerReply.ProtoReflect.Descriptor instead.
func (*RemoveStreamPlayerReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{96}
}

type UpdateStreamPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *StreamPlayerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *UpdateStreamPlayerRequest) Reset() {
	*x = UpdateStreamPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamPlayerRequest) ProtoMessage() {}

func (x *UpdateStreamPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamPlayerRequest.ProtoReflect.Descriptor instead.
func (*UpdateStreamPlayerRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{97}
}

func (x *UpdateStreamPlayerRequest) GetConfig() *StreamPlayerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateStreamPlayerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStreamPlayerReply) Reset() {
	*x = UpdateStreamPlayerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStreamPlayerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStreamPlayerReply) ProtoMessage() {}

func (x *UpdateStreamPlayerReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStreamPlayerReply.ProtoReflect.Descriptor instead.
func (*UpdateStreamPlayerReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{98}
}

type ListStreamPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStreamPlayersRequest) Reset() {
	*x = ListStreamPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamPlayersRequest) ProtoMessage() {}

func (x *ListStreamPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamPlayersRequest.ProtoReflect.Descriptor instead.
func (*ListStreamPlayersRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{99}
}

type ListStreamPlayersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*StreamPlayerConfig `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *ListStreamPlayersReply) Reset() {
	*x = ListStreamPlayersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStreamPlayersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStreamPlayersReply) ProtoMessage() {}

func (x *ListStreamPlayersReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStreamPlayersReply.ProtoReflect.Descriptor instead.
func (*ListStreamPlayersReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{100}
}

func (x *ListStreamPlayersReply) GetPlayers() []*StreamPlayerConfig {
	if x != nil {
		return x.Players
	}
	return nil
}

type GetStreamPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *GetStreamPlayerRequest) Reset() {
	*x = GetStreamPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamPlayerRequest) ProtoMessage() {}

func (x *GetStreamPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetStreamPlayerRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{101}
}

func (x *GetStreamPlayerRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

type GetStreamPlayerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *StreamPlayerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetStreamPlayerReply) Reset() {
	*x = GetStreamPlayerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamPlayerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamPlayerReply) ProtoMessage() {}

func (x *GetStreamPlayerReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamPlayerReply.ProtoReflect.Descriptor instead.
func (*GetStreamPlayerReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{102}
}

func (x *GetStreamPlayerReply) GetConfig() *StreamPlayerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type StreamPlayerOpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                   `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.OpenRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerOpenRequest) Reset() {
	*x = StreamPlayerOpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerOpenRequest) ProtoMessage() {}

func (x *StreamPlayerOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerOpenRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerOpenRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{103}
}

func (x *StreamPlayerOpenRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerOpenRequest) GetRequest() *player_grpc.OpenRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerOpenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.OpenReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerOpenReply) Reset() {
	*x = StreamPlayerOpenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerOpenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerOpenReply) ProtoMessage() {}

func (x *StreamPlayerOpenReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerOpenReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerOpenReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{104}
}

func (x *StreamPlayerOpenReply) GetReply() *player_grpc.OpenReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerProcessTitleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                           `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.ProcessTitleRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerProcessTitleRequest) Reset() {
	*x = StreamPlayerProcessTitleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerProcessTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerProcessTitleRequest) ProtoMessage() {}

func (x *StreamPlayerProcessTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerProcessTitleRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerProcessTitleRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{105}
}

func (x *StreamPlayerProcessTitleRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerProcessTitleRequest) GetRequest() *player_grpc.ProcessTitleRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerProcessTitleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.ProcessTitleReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerProcessTitleReply) Reset() {
	*x = StreamPlayerProcessTitleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerProcessTitleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerProcessTitleReply) ProtoMessage() {}

func (x *StreamPlayerProcessTitleReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerProcessTitleReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerProcessTitleReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{106}
}

func (x *StreamPlayerProcessTitleReply) GetReply() *player_grpc.ProcessTitleReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerGetLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                      `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.GetLinkRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerGetLinkRequest) Reset() {
	*x = StreamPlayerGetLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerGetLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerGetLinkRequest) ProtoMessage() {}

func (x *StreamPlayerGetLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerGetLinkRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerGetLinkRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{107}
}

func (x *StreamPlayerGetLinkRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerGetLinkRequest) GetRequest() *player_grpc.GetLinkRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerGetLinkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.GetLinkReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerGetLinkReply) Reset() {
	*x = StreamPlayerGetLinkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerGetLinkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerGetLinkReply) ProtoMessage() {}

func (x *StreamPlayerGetLinkReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerGetLinkReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerGetLinkReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{108}
}

func (x *StreamPlayerGetLinkReply) GetReply() *player_grpc.GetLinkReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerEndChanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                      `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.EndChanRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerEndChanRequest) Reset() {
	*x = StreamPlayerEndChanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerEndChanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerEndChanRequest) ProtoMessage() {}

func (x *StreamPlayerEndChanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerEndChanRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerEndChanRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{109}
}

func (x *StreamPlayerEndChanRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerEndChanRequest) GetRequest() *player_grpc.EndChanRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerEndChanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.EndChanReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerEndChanReply) Reset() {
	*x = StreamPlayerEndChanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerEndChanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerEndChanReply) ProtoMessage() {}

func (x *StreamPlayerEndChanReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerEndChanReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerEndChanReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{110}
}

func (x *StreamPlayerEndChanReply) GetReply() *player_grpc.EndChanReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerIsEndedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                      `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.IsEndedRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerIsEndedRequest) Reset() {
	*x = StreamPlayerIsEndedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerIsEndedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerIsEndedRequest) ProtoMessage() {}

func (x *StreamPlayerIsEndedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerIsEndedRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerIsEndedRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{111}
}

func (x *StreamPlayerIsEndedRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerIsEndedRequest) GetRequest() *player_grpc.IsEndedRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerIsEndedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.IsEndedReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerIsEndedReply) Reset() {
	*x = StreamPlayerIsEndedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerIsEndedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerIsEndedReply) ProtoMessage() {}

func (x *StreamPlayerIsEndedReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerIsEndedReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerIsEndedReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{112}
}

func (x *StreamPlayerIsEndedReply) GetReply() *player_grpc.IsEndedReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerGetPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                          `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.GetPositionRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerGetPositionRequest) Reset() {
	*x = StreamPlayerGetPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerGetPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerGetPositionRequest) ProtoMessage() {}

func (x *StreamPlayerGetPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerGetPositionRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerGetPositionRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{113}
}

func (x *StreamPlayerGetPositionRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerGetPositionRequest) GetRequest() *player_grpc.GetPositionRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerGetPositionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.GetPositionReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerGetPositionReply) Reset() {
	*x = StreamPlayerGetPositionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerGetPositionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerGetPositionReply) ProtoMessage() {}

func (x *StreamPlayerGetPositionReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerGetPositionReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerGetPositionReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{114}
}

func (x *StreamPlayerGetPositionReply) GetReply() *player_grpc.GetPositionReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerGetLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                        `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.GetLengthRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerGetLengthRequest) Reset() {
	*x = StreamPlayerGetLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerGetLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerGetLengthRequest) ProtoMessage() {}

func (x *StreamPlayerGetLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerGetLengthRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerGetLengthRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{115}
}

func (x *StreamPlayerGetLengthRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerGetLengthRequest) GetRequest() *player_grpc.GetLengthRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerGetLengthReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.GetLengthReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerGetLengthReply) Reset() {
	*x = StreamPlayerGetLengthReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerGetLengthReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerGetLengthReply) ProtoMessage() {}

func (x *StreamPlayerGetLengthReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerGetLengthReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerGetLengthReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{116}
}

func (x *StreamPlayerGetLengthReply) GetReply() *player_grpc.GetLengthReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerSetSpeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                       `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.SetSpeedRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerSetSpeedRequest) Reset() {
	*x = StreamPlayerSetSpeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerSetSpeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerSetSpeedRequest) ProtoMessage() {}

func (x *StreamPlayerSetSpeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerSetSpeedRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerSetSpeedRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{117}
}

func (x *StreamPlayerSetSpeedRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerSetSpeedRequest) GetRequest() *player_grpc.SetSpeedRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerSetSpeedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.SetSpeedReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerSetSpeedReply) Reset() {
	*x = StreamPlayerSetSpeedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerSetSpeedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerSetSpeedReply) ProtoMessage() {}

func (x *StreamPlayerSetSpeedReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerSetSpeedReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerSetSpeedReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{118}
}

func (x *StreamPlayerSetSpeedReply) GetReply() *player_grpc.SetSpeedReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerSetPauseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                       `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.SetPauseRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerSetPauseRequest) Reset() {
	*x = StreamPlayerSetPauseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerSetPauseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerSetPauseRequest) ProtoMessage() {}

func (x *StreamPlayerSetPauseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerSetPauseRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerSetPauseRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{119}
}

func (x *StreamPlayerSetPauseRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerSetPauseRequest) GetRequest() *player_grpc.SetPauseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerSetPauseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.SetPauseReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerSetPauseReply) Reset() {
	*x = StreamPlayerSetPauseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerSetPauseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerSetPauseReply) ProtoMessage() {}

func (x *StreamPlayerSetPauseReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerSetPauseReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerSetPauseReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{120}
}

func (x *StreamPlayerSetPauseReply) GetReply() *player_grpc.SetPauseReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                   `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.StopRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerStopRequest) Reset() {
	*x = StreamPlayerStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerStopRequest) ProtoMessage() {}

func (x *StreamPlayerStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerStopRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerStopRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{121}
}

func (x *StreamPlayerStopRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerStopRequest) GetRequest() *player_grpc.StopRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerStopReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.StopReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerStopReply) Reset() {
	*x = StreamPlayerStopReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerStopReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerStopReply) ProtoMessage() {}

func (x *StreamPlayerStopReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerStopReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerStopReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{122}
}

func (x *StreamPlayerStopReply) GetReply() *player_grpc.StopReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type StreamPlayerCloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID string                    `protobuf:"bytes,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
	Request  *player_grpc.CloseRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *StreamPlayerCloseRequest) Reset() {
	*x = StreamPlayerCloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerCloseRequest) ProtoMessage() {}

func (x *StreamPlayerCloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerCloseRequest.ProtoReflect.Descriptor instead.
func (*StreamPlayerCloseRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{123}
}

func (x *StreamPlayerCloseRequest) GetStreamID() string {
	if x != nil {
		return x.StreamID
	}
	return ""
}

func (x *StreamPlayerCloseRequest) GetRequest() *player_grpc.CloseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type StreamPlayerCloseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *player_grpc.CloseReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *StreamPlayerCloseReply) Reset() {
	*x = StreamPlayerCloseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayerCloseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayerCloseReply) ProtoMessage() {}

func (x *StreamPlayerCloseReply) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayerCloseReply.ProtoReflect.Descriptor instead.
func (*StreamPlayerCloseReply) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{124}
}

func (x *StreamPlayerCloseReply) GetReply() *player_grpc.CloseReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type SubscribeToConfigChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToConfigChangesRequest) Reset() {
	*x = SubscribeToConfigChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToConfigChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToConfigChangesRequest) ProtoMessage() {}

func (x *SubscribeToConfigChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToConfigChangesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToConfigChangesRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{125}
}

type ConfigChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigChange) Reset() {
	*x = ConfigChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChange) ProtoMessage() {}

func (x *ConfigChange) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChange.ProtoReflect.Descriptor instead.
func (*ConfigChange) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{126}
}

type SubscribeToStreamsChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToStreamsChangesRequest) Reset() {
	*x = SubscribeToStreamsChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToStreamsChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToStreamsChangesRequest) ProtoMessage() {}

func (x *SubscribeToStreamsChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToStreamsChangesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToStreamsChangesRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{127}
}

type StreamsChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamsChange) Reset() {
	*x = StreamsChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamsChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamsChange) ProtoMessage() {}

func (x *StreamsChange) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamsChange.ProtoReflect.Descriptor instead.
func (*StreamsChange) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{128}
}

type SubscribeToStreamServersChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToStreamServersChangesRequest) Reset() {
	*x = SubscribeToStreamServersChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToStreamServersChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToStreamServersChangesRequest) ProtoMessage() {}

func (x *SubscribeToStreamServersChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToStreamServersChangesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToStreamServersChangesRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{129}
}

type StreamServersChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamServersChange) Reset() {
	*x = StreamServersChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServersChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServersChange) ProtoMessage() {}

func (x *StreamServersChange) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServersChange.ProtoReflect.Descriptor instead.
func (*StreamServersChange) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{130}
}

type SubscribeToStreamDestinationsChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToStreamDestinationsChangesRequest) Reset() {
	*x = SubscribeToStreamDestinationsChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToStreamDestinationsChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToStreamDestinationsChangesRequest) ProtoMessage() {}

func (x *SubscribeToStreamDestinationsChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToStreamDestinationsChangesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToStreamDestinationsChangesRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{131}
}

type StreamDestinationsChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamDestinationsChange) Reset() {
	*x = StreamDestinationsChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDestinationsChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDestinationsChange) ProtoMessage() {}

func (x *StreamDestinationsChange) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDestinationsChange.ProtoReflect.Descriptor instead.
func (*StreamDestinationsChange) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{132}
}

type SubscribeToIncomingStreamsChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToIncomingStreamsChangesRequest) Reset() {
	*x = SubscribeToIncomingStreamsChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToIncomingStreamsChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToIncomingStreamsChangesRequest) ProtoMessage() {}

func (x *SubscribeToIncomingStreamsChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToIncomingStreamsChangesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToIncomingStreamsChangesRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{133}
}

type IncomingStreamsChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IncomingStreamsChange) Reset() {
	*x = IncomingStreamsChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomingStreamsChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomingStreamsChange) ProtoMessage() {}

func (x *IncomingStreamsChange) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomingStreamsChange.ProtoReflect.Descriptor instead.
func (*IncomingStreamsChange) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{134}
}

type SubscribeToStreamForwardsChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToStreamForwardsChangesRequest) Reset() {
	*x = SubscribeToStreamForwardsChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToStreamForwardsChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToStreamForwardsChangesRequest) ProtoMessage() {}

func (x *SubscribeToStreamForwardsChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToStreamForwardsChangesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToStreamForwardsChangesRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{135}
}

type StreamForwardsChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamForwardsChange) Reset() {
	*x = StreamForwardsChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamForwardsChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamForwardsChange) ProtoMessage() {}

func (x *StreamForwardsChange) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamForwardsChange.ProtoReflect.Descriptor instead.
func (*StreamForwardsChange) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{136}
}

type SubscribeToStreamPlayersChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeToStreamPlayersChangesRequest) Reset() {
	*x = SubscribeToStreamPlayersChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeToStreamPlayersChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToStreamPlayersChangesRequest) ProtoMessage() {}

func (x *SubscribeToStreamPlayersChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToStreamPlayersChangesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToStreamPlayersChangesRequest) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{137}
}

type StreamPlayersChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamPlayersChange) Reset() {
	*x = StreamPlayersChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamd_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPlayersChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPlayersChange) ProtoMessage() {}

func (x *StreamPlayersChange) ProtoReflect() protoreflect.Message {
	mi := &file_streamd_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPlayersChange.ProtoReflect.Descriptor instead.
func (*StreamPlayersChange) Descriptor() ([]byte, []int) {
	return file_streamd_proto_rawDescGZIP(), []int{138}
}

var File_streamd_proto protoreflect.FileDescriptor

var file_streamd_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x1a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x12, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x2a, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x61, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11,
	0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x0a, 0x10, 0x49, 0x6e, 0x69,
	0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a,
	0x0e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x7e, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x12, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x2a, 0x0a, 0x10, 0x45, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x22,
	0x10, 0x0a, 0x0e, 0x45, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x4a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61,
	0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x22, 0x4f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x17, 0x49, 0x73, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x22, 0x3d, 0x0a, 0x15, 0x49, 0x73,
	0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3f, 0x0a, 0x0f, 0x53,
	0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x0f, 0x0a, 0x0d,
	0x53, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x51, 0x0a,
	0x15, 0x53, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x47, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x7f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x0a, 0x2b, 0x45,
	0x58, 0x50, 0x45, 0x52, 0x49, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x5f, 0x52, 0x65, 0x69, 0x6e,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x29, 0x45, 0x58,
	0x50, 0x45, 0x52, 0x49, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x5f, 0x52, 0x65, 0x69, 0x6e, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x0a, 0x1b, 0x4f, 0x42, 0x53, 0x4f, 0x4c,
	0x45, 0x54, 0x45, 0x5f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45,
	0x54, 0x45, 0x5f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1c, 0x0a, 0x1a, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x47, 0x65, 0x74, 0x47, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x40, 0x0a, 0x18, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x47, 0x65,
	0x74, 0x47, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x47, 0x69, 0x74, 0x52, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x1a, 0x0a, 0x18, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x47, 0x69,
	0x74, 0x52, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x41, 0x0a,
	0x1f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74,
	0x22, 0x40, 0x0a, 0x0c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55,
	0x52, 0x4c, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x59, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x6b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3c,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x18, 0x0a, 0x16, 0x4f, 0x42, 0x53, 0x47, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x08, 0x4f, 0x42,
	0x53, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa9, 0x02, 0x0a, 0x14, 0x4f, 0x42, 0x53, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a,
	0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x55, 0x55, 0x49,
	0x44, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x55, 0x55, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x4f, 0x42, 0x53, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73,
	0x22, 0x70, 0x0a, 0x20, 0x4f, 0x42, 0x53, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x55, 0x55, 0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x4f, 0x42, 0x53, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x49, 0x44, 0x22, 0x20, 0x0a, 0x1e, 0x4f, 0x42, 0x53, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x44, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x69, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x22, 0x82, 0x01,
	0x0a, 0x16, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x4e, 0x75, 0x6d, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x57, 0x72, 0x6f, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x4e, 0x75, 0x6d, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x57, 0x72, 0x6f, 0x74, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x4e, 0x75, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x4e, 0x75,
	0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x3f, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x22, 0x49, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x18, 0x0a,
	0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x39, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x70, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4b, 0x0a, 0x11, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x1f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x51, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x46, 0x0a, 0x1e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x1e, 0x0a, 0x1c,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x0a, 0x0e,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x18, 0x41, 0x64,
	0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x39, 0x0a, 0x1b,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x5d, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41,
	0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x64, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x22, 0x8b, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x59, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x7a, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x70, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22,
	0x95, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x51, 0x75, 0x69, 0x72, 0x6b, 0x73, 0x12, 0x7e, 0x0a, 0x23, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x59, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x59, 0x6f, 0x75, 0x74, 0x75,
	0x62, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x23, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x59, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65,
	0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0xa1, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x51, 0x75, 0x69,
	0x72, 0x6b, 0x73, 0x52, 0x06, 0x71, 0x75, 0x69, 0x72, 0x6b, 0x73, 0x22, 0x63, 0x0a, 0x17, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x57, 0x72, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e,
	0x75, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x57, 0x72, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x6e, 0x75, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x22, 0x8f, 0x01, 0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x40, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x67, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a, 0x0e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x49, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x17, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4c, 0x0a, 0x1a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4c, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x4d, 0x0a, 0x1d, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22,
	0x11, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x22, 0x8a, 0x02, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x15, 0x4a,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x42, 0x75, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x4a, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x42, 0x75, 0x66, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x73, 0x12, 0x34, 0x0a, 0x15, 0x43, 0x61, 0x74, 0x63, 0x68, 0x75, 0x70, 0x4d, 0x61, 0x78, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x15, 0x43, 0x61, 0x74, 0x63, 0x68, 0x75, 0x70, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x43, 0x61,
	0x74, 0x63, 0x68, 0x75, 0x70, 0x41, 0x74, 0x4c, 0x61, 0x67, 0x53, 0x65, 0x63, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x74, 0x63, 0x68, 0x75, 0x70,
	0x41, 0x74, 0x4c, 0x61, 0x67, 0x53, 0x65, 0x63, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x63, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x73, 0x22,
	0xd4, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4d, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x37, 0x0a,
	0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x50, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x22, 0x4b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x64,
	0x0a, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x74, 0x0a, 0x1f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x1d,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6a,
	0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x18, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x6a, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46,
	0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6a, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44,
	0x12, 0x30, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x45, 0x6e, 0x64,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x46, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x72, 0x0a, 0x1e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e,
	0x0a, 0x1c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e,
	0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6e,
	0x0a, 0x1c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a,
	0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6c, 0x0a, 0x1b, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x6c, 0x0a, 0x1b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x31, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x48, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x64, 0x0a, 0x17, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x40, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x66, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x16, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21,
	0x0a, 0x1f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x22, 0x22, 0x0a, 0x20, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x26, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x15, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x2b, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x2a, 0x0a, 0x28, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x6f, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17,
	0x0a, 0x15, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x27, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x26, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2a, 0x19, 0x0a, 0x08, 0x48,
	0x61, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x53, 0x48, 0x5f,
	0x53, 0x48, 0x41, 0x31, 0x10, 0x00, 0x2a, 0x35, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x54, 0x53,
	0x50, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x54, 0x4d, 0x50, 0x10, 0x02, 0x2a, 0x49, 0x0a,
	0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x62,
	0x56, 0x4c, 0x43, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x4d, 0x50, 0x56, 0x10, 0x02, 0x32, 0xd7, 0x2d, 0x0a, 0x07, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x44, 0x12, 0x41, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x53, 0x61,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x5f, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x44, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x09, 0x49, 0x6e, 0x69, 0x74, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0b, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x09, 0x45, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x45, 0x6e, 0x64, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x45, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x10, 0x49,
	0x73, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x49, 0x73, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x49, 0x73, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x12, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x07, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x65, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47,
	0x0a, 0x0b, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x24, 0x45, 0x58, 0x50, 0x45,
	0x52, 0x49, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x5f, 0x52, 0x65, 0x69, 0x6e, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73,
	0x12, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x45, 0x58, 0x50, 0x45, 0x52,
	0x49, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x5f, 0x52, 0x65, 0x69, 0x6e, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x2e, 0x45, 0x58, 0x50, 0x45, 0x52, 0x49, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x5f, 0x52, 0x65,
	0x69, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x14,
	0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4f,
	0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x10, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x47, 0x69, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4f,
	0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x69, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x47, 0x65, 0x74,
	0x47, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f,
	0x0a, 0x13, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x47, 0x69, 0x74, 0x52, 0x65,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x47, 0x69, 0x74, 0x52, 0x65, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x47, 0x69,
	0x74, 0x52, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x6f, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x53, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0f, 0x4f, 0x42, 0x53, 0x47, 0x65, 0x74, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x2e, 0x4f, 0x42, 0x53, 0x47, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x4f, 0x42, 0x53, 0x47, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x19, 0x4f, 0x42,
	0x53, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x29, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x64, 0x2e, 0x4f, 0x42, 0x53, 0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4f, 0x42, 0x53,
	0x53, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x21, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x64, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x1f, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2f,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x68, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x41, 0x64,
	0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x6b, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a,
	0x24, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x59, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x64, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a,
	0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x5f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x7a, 0x0a, 0x21, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x6f, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x64, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5c,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x41, 0x64, 0x64,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x20, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x5e, 0x0a, 0x16, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x53, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x41, 0x64, 0x64,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x41, 0x64,
	0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1f,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x74, 0x0a, 0x1f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x56, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f,
	0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x61, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x5f, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x14, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x70, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x6f, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x64,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_streamd_proto_rawDescOnce sync.Once
	file_streamd_proto_rawDescData = file_streamd_proto_rawDesc
)

func file_streamd_proto_rawDescGZIP() []byte {
	file_streamd_proto_rawDescOnce.Do(func() {
		file_streamd_proto_rawDescData = protoimpl.X.CompressGZIP(file_streamd_proto_rawDescData)
	})
	return file_streamd_proto_rawDescData
}

var file_streamd_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_streamd_proto_msgTypes = make([]protoimpl.MessageInfo, 139)
var file_streamd_proto_goTypes = []interface{}{
	(HashType)(0),                                       // 0: streamd.HashType
	(StreamServerType)(0),                               // 1: streamd.StreamServerType
	(PlayerType)(0),                                     // 2: streamd.PlayerType
	(*GetConfigRequest)(nil),                            // 3: streamd.GetConfigRequest
	(*GetConfigReply)(nil),                              // 4: streamd.GetConfigReply
	(*SetConfigRequest)(nil),                            // 5: streamd.SetConfigRequest
	(*SetConfigReply)(nil),                              // 6: streamd.SetConfigReply
	(*SaveConfigRequest)(nil),                           // 7: streamd.SaveConfigRequest
	(*SaveConfigReply)(nil),                             // 8: streamd.SaveConfigReply
	(*ResetCacheRequest)(nil),                           // 9: streamd.ResetCacheRequest
	(*ResetCacheReply)(nil),                             // 10: streamd.ResetCacheReply
	(*InitCacheRequest)(nil),                            // 11: streamd.InitCacheRequest
	(*InitCacheReply)(nil),                              // 12: streamd.InitCacheReply
	(*StartStreamRequest)(nil),                          // 13: streamd.StartStreamRequest
	(*StartStreamReply)(nil),                            // 14: streamd.StartStreamReply
	(*EndStreamRequest)(nil),                            // 15: streamd.EndStreamRequest
	(*EndStreamReply)(nil),                              // 16: streamd.EndStreamReply
	(*GetStreamStatusRequest)(nil),                      // 17: streamd.GetStreamStatusRequest
	(*GetStreamStatusReply)(nil),                        // 18: streamd.GetStreamStatusReply
	(*GetBackendInfoRequest)(nil),                       // 19: streamd.GetBackendInfoRequest
	(*GetBackendInfoReply)(nil),                         // 20: streamd.GetBackendInfoReply
	(*IsBackendEnabledRequest)(nil),                     // 21: streamd.IsBackendEnabledRequest
	(*IsBackendEnabledReply)(nil),                       // 22: streamd.IsBackendEnabledReply
	(*RestartRequest)(nil),                              // 23: streamd.RestartRequest
	(*RestartReply)(nil),                                // 24: streamd.RestartReply
	(*SetTitleRequest)(nil),                             // 25: streamd.SetTitleRequest
	(*SetTitleReply)(nil),                               // 26: streamd.SetTitleReply
	(*SetDescriptionRequest)(nil),                       // 27: streamd.SetDescriptionRequest
	(*SetDescriptionReply)(nil),                         // 28: streamd.SetDescriptionReply
	(*ApplyProfileRequest)(nil),                         // 29: streamd.ApplyProfileRequest
	(*ApplyProfileReply)(nil),                           // 30: streamd.ApplyProfileReply
	(*UpdateStreamRequest)(nil),                         // 31: streamd.UpdateStreamRequest
	(*UpdateStreamReply)(nil),                           // 32: streamd.UpdateStreamReply
	(*EXPERIMENTAL_ReinitStreamControllersRequest)(nil), // 33: streamd.EXPERIMENTAL_ReinitStreamControllersRequest
	(*EXPERIMENTAL_ReinitStreamControllersReply)(nil),   // 34: streamd.EXPERIMENTAL_ReinitStreamControllersReply
	(*OBSOLETE_FetchConfigRequest)(nil),                 // 35: streamd.OBSOLETE_FetchConfigRequest
	(*OBSOLETE_FetchConfigReply)(nil),                   // 36: streamd.OBSOLETE_FetchConfigReply
	(*OBSOLETE_GetGitInfoRequest)(nil),                  // 37: streamd.OBSOLETE_GetGitInfoRequest
	(*OBSOLETE_GetGitInfoReply)(nil),                    // 38: streamd.OBSOLETE_GetGitInfoReply
	(*OBSOLETE_GitReloginRequest)(nil),                  // 39: streamd.OBSOLETE_GitReloginRequest
	(*OBSOLETE_GitReloginReply)(nil),                    // 40: streamd.OBSOLETE_GitReloginReply
	(*SubscribeToOAuthRequestsRequest)(nil),             // 41: streamd.SubscribeToOAuthRequestsRequest
	(*OAuthRequest)(nil),                                // 42: streamd.OAuthRequest
	(*GetVariableRequest)(nil),                          // 43: streamd.GetVariableRequest
	(*GetVariableReply)(nil),                            // 44: streamd.GetVariableReply
	(*GetVariableHashRequest)(nil),                      // 45: streamd.GetVariableHashRequest
	(*GetVariableHashReply)(nil),                        // 46: streamd.GetVariableHashReply
	(*SetVariableRequest)(nil),                          // 47: streamd.SetVariableRequest
	(*SetVariableReply)(nil),                            // 48: streamd.SetVariableReply
	(*OBSGetSceneListRequest)(nil),                      // 49: streamd.OBSGetSceneListRequest
	(*OBSScene)(nil),                                    // 50: streamd.OBSScene
	(*OBSGetSceneListReply)(nil),                        // 51: streamd.OBSGetSceneListReply
	(*OBSSetCurrentProgramSceneRequest)(nil),            // 52: streamd.OBSSetCurrentProgramSceneRequest
	(*OBSSetCurrentProgramSceneReply)(nil),              // 53: streamd.OBSSetCurrentProgramSceneReply
	(*SubmitOAuthCodeRequest)(nil),                      // 54: streamd.SubmitOAuthCodeRequest
	(*SubmitOAuthCodeReply)(nil),                        // 55: streamd.SubmitOAuthCodeReply
	(*StreamServer)(nil),                                // 56: streamd.StreamServer
	(*StreamServerStatistics)(nil),                      // 57: streamd.StreamServerStatistics
	(*StreamServerWithStatistics)(nil),                  // 58: streamd.StreamServerWithStatistics
	(*ListStreamServersRequest)(nil),                    // 59: streamd.ListStreamServersRequest
	(*ListStreamServersReply)(nil),                      // 60: streamd.ListStreamServersReply
	(*StartStreamServerRequest)(nil),                    // 61: streamd.StartStreamServerRequest
	(*StartStreamServerReply)(nil),                      // 62: streamd.StartStreamServerReply
	(*StopStreamServerRequest)(nil),                     // 63: streamd.StopStreamServerRequest
	(*StopStreamServerReply)(nil),                       // 64: streamd.StopStreamServerReply
	(*StreamDestination)(nil),                           // 65: streamd.StreamDestination
	(*ListStreamDestinationsRequest)(nil),               // 66: streamd.ListStreamDestinationsRequest
	(*ListStreamDestinationsReply)(nil),                 // 67: streamd.ListStreamDestinationsReply
	(*AddStreamDestinationRequest)(nil),                 // 68: streamd.AddStreamDestinationRequest
	(*AddStreamDestinationReply)(nil),                   // 69: streamd.AddStreamDestinationReply
	(*RemoveStreamDestinationRequest)(nil),              // 70: streamd.RemoveStreamDestinationRequest
	(*RemoveStreamDestinationReply)(nil),                // 71: streamd.RemoveStreamDestinationReply
	(*IncomingStream)(nil),                              // 72: streamd.IncomingStream
	(*AddIncomingStreamRequest)(nil),                    // 73: streamd.AddIncomingStreamRequest
	(*AddIncomingStreamReply)(nil),                      // 74: streamd.AddIncomingStreamReply
	(*RemoveIncomingStreamRequest)(nil),                 // 75: streamd.RemoveIncomingStreamRequest
	(*RemoveIncomingStreamReply)(nil),                   // 76: streamd.RemoveIncomingStreamReply
	(*ListIncomingStreamsRequest)(nil),                  // 77: streamd.ListIncomingStreamsRequest
	(*ListIncomingStreamsReply)(nil),                    // 78: streamd.ListIncomingStreamsReply
	(*RestartUntilYoutubeRecognizesStream)(nil),         // 79: streamd.RestartUntilYoutubeRecognizesStream
	(*StreamForwardQuirks)(nil),                         // 80: streamd.StreamForwardQuirks
	(*StreamForward)(nil),                               // 81: streamd.StreamForward
	(*StreamForwardStatistics)(nil),                     // 82: streamd.StreamForwardStatistics
	(*StreamForwardWithStatistics)(nil),                 // 83: streamd.StreamForwardWithStatistics
	(*ListStreamForwardsRequest)(nil),                   // 84: streamd.ListStreamForwardsRequest
	(*ListStreamForwardsReply)(nil),                     // 85: streamd.ListStreamForwardsReply
	(*AddStreamForwardRequest)(nil),                     // 86: streamd.AddStreamForwardRequest
	(*AddStreamForwardReply)(nil),                       // 87: streamd.AddStreamForwardReply
	(*UpdateStreamForwardRequest)(nil),                  // 88: streamd.UpdateStreamForwardRequest
	(*UpdateStreamForwardReply)(nil),                    // 89: streamd.UpdateStreamForwardReply
	(*RemoveStreamForwardRequest)(nil),                  // 90: streamd.RemoveStreamForwardRequest
	(*RemoveStreamForwardReply)(nil),                    // 91: streamd.RemoveStreamForwardReply
	(*WaitForStreamPublisherRequest)(nil),               // 92: streamd.WaitForStreamPublisherRequest
	(*StreamPublisher)(nil),                             // 93: streamd.StreamPublisher
	(*StreamPlaybackConfig)(nil),                        // 94: streamd.StreamPlaybackConfig
	(*StreamPlayerConfig)(nil),                          // 95: streamd.StreamPlayerConfig
	(*AddStreamPlayerRequest)(nil),                      // 96: streamd.AddStreamPlayerRequest
	(*AddStreamPlayerReply)(nil),                        // 97: streamd.AddStreamPlayerReply
	(*RemoveStreamPlayerRequest)(nil),                   // 98: streamd.RemoveStreamPlayerRequest
	(*RemoveStreamPlayerReply)(nil),                     // 99: streamd.RemoveStreamPlayerReply
	(*UpdateStreamPlayerRequest)(nil),                   // 100: streamd.UpdateStreamPlayerRequest
	(*UpdateStreamPlayerReply)(nil),                     // 101: streamd.UpdateStreamPlayerReply
	(*ListStreamPlayersRequest)(nil),                    // 102: streamd.ListStreamPlayersRequest
	(*ListStreamPlayersReply)(nil),                      // 103: streamd.ListStreamPlayersReply
	(*GetStreamPlayerRequest)(nil),                      // 104: streamd.GetStreamPlayerRequest
	(*GetStreamPlayerReply)(nil),                        // 105: streamd.GetStreamPlayerReply
	(*StreamPlayerOpenRequest)(nil),                     // 106: streamd.StreamPlayerOpenRequest
	(*StreamPlayerOpenReply)(nil),                       // 107: streamd.StreamPlayerOpenReply
	(*StreamPlayerProcessTitleRequest)(nil),             // 108: streamd.StreamPlayerProcessTitleRequest
	(*StreamPlayerProcessTitleReply)(nil),               // 109: streamd.StreamPlayerProcessTitleReply
	(*StreamPlayerGetLinkRequest)(nil),                  // 110: streamd.StreamPlayerGetLinkRequest
	(*StreamPlayerGetLinkReply)(nil),                    // 111: streamd.StreamPlayerGetLinkReply
	(*StreamPlayerEndChanRequest)(nil),                  // 112: streamd.StreamPlayerEndChanRequest
	(*StreamPlayerEndChanReply)(nil),                    // 113: streamd.StreamPlayerEndChanReply
	(*StreamPlayerIsEndedRequest)(nil),                  // 114: streamd.StreamPlayerIsEndedRequest
	(*StreamPlayerIsEndedReply)(nil),                    // 115: streamd.StreamPlayerIsEndedReply
	(*StreamPlayerGetPositionRequest)(nil),              // 116: streamd.StreamPlayerGetPositionRequest
	(*StreamPlayerGetPositionReply)(nil),                // 117: streamd.StreamPlayerGetPositionReply
	(*StreamPlayerGetLengthRequest)(nil),                // 118: streamd.StreamPlayerGetLengthRequest
	(*StreamPlayerGetLengthReply)(nil),                  // 119: streamd.StreamPlayerGetLengthReply
	(*StreamPlayerSetSpeedRequest)(nil),                 // 120: streamd.StreamPlayerSetSpeedRequest
	(*StreamPlayerSetSpeedReply)(nil),                   // 121: streamd.StreamPlayerSetSpeedReply
	(*StreamPlayerSetPauseRequest)(nil),                 // 122: streamd.StreamPlayerSetPauseRequest
	(*StreamPlayerSetPauseReply)(nil),                   // 123: streamd.StreamPlayerSetPauseReply
	(*StreamPlayerStopRequest)(nil),                     // 124: streamd.StreamPlayerStopRequest
	(*StreamPlayerStopReply)(nil),                       // 125: streamd.StreamPlayerStopReply
	(*StreamPlayerCloseRequest)(nil),                    // 126: streamd.StreamPlayerCloseRequest
	(*StreamPlayerCloseReply)(nil),                      // 127: streamd.StreamPlayerCloseReply
	(*SubscribeToConfigChangesRequest)(nil),             // 128: streamd.SubscribeToConfigChangesRequest
	(*ConfigChange)(nil),                                // 129: streamd.ConfigChange
	(*SubscribeToStreamsChangesRequest)(nil),            // 130: streamd.SubscribeToStreamsChangesRequest
	(*StreamsChange)(nil),                               // 131: streamd.StreamsChange
	(*SubscribeToStreamServersChangesRequest)(nil),      // 132: streamd.SubscribeToStreamServersChangesRequest
	(*StreamServersChange)(nil),                         // 133: streamd.StreamServersChange
	(*SubscribeToStreamDestinationsChangesRequest)(nil), // 134: streamd.SubscribeToStreamDestinationsChangesRequest
	(*StreamDestinationsChange)(nil),                    // 135: streamd.StreamDestinationsChange
	(*SubscribeToIncomingStreamsChangesRequest)(nil),    // 136: streamd.SubscribeToIncomingStreamsChangesRequest
	(*IncomingStreamsChange)(nil),                       // 137: streamd.IncomingStreamsChange
	(*SubscribeToStreamForwardsChangesRequest)(nil),     // 138: streamd.SubscribeToStreamForwardsChangesRequest
	(*StreamForwardsChange)(nil),                        // 139: streamd.StreamForwardsChange
	(*SubscribeToStreamPlayersChangesRequest)(nil),      // 140: streamd.SubscribeToStreamPlayersChangesRequest
	(*StreamPlayersChange)(nil),                         // 141: streamd.StreamPlayersChange
	(*player_grpc.OpenRequest)(nil),                     // 142: player.OpenRequest
	(*player_grpc.OpenReply)(nil),                       // 143: player.OpenReply
	(*player_grpc.ProcessTitleRequest)(nil),             // 144: player.ProcessTitleRequest
	(*player_grpc.ProcessTitleReply)(nil),               // 145: player.ProcessTitleReply
	(*player_grpc.GetLinkRequest)(nil),                  // 146: player.GetLinkRequest
	(*player_grpc.GetLinkReply)(nil),                    // 147: player.GetLinkReply
	(*player_grpc.EndChanRequest)(nil),                  // 148: player.EndChanRequest
	(*player_grpc.EndChanReply)(nil),                    // 149: player.EndChanReply
	(*player_grpc.IsEndedRequest)(nil),                  // 150: player.IsEndedRequest
	(*player_grpc.IsEndedReply)(nil),                    // 151: player.IsEndedReply
	(*player_grpc.GetPositionRequest)(nil),              // 152: player.GetPositionRequest
	(*player_grpc.GetPositionReply)(nil),                // 153: player.GetPositionReply
	(*player_grpc.GetLengthRequest)(nil),                // 154: player.GetLengthRequest
	(*player_grpc.GetLengthReply)(nil),                  // 155: player.GetLengthReply
	(*player_grpc.SetSpeedRequest)(nil),                 // 156: player.SetSpeedRequest
	(*player_grpc.SetSpeedReply)(nil),                   // 157: player.SetSpeedReply
	(*player_grpc.SetPauseRequest)(nil),                 // 158: player.SetPauseRequest
	(*player_grpc.SetPauseReply)(nil),                   // 159: player.SetPauseReply
	(*player_grpc.StopRequest)(nil),                     // 160: player.StopRequest
	(*player_grpc.StopReply)(nil),                       // 161: player.StopReply
	(*player_grpc.CloseRequest)(nil),                    // 162: player.CloseRequest
	(*player_grpc.CloseReply)(nil),                      // 163: player.CloseReply
}
var file_streamd_proto_depIdxs = []int32{
	0,   // 0: streamd.GetVariableHashRequest.hashType:type_name -> streamd.HashType
	0,   // 1: streamd.GetVariableHashReply.hashType:type_name -> streamd.HashType
	50,  // 2: streamd.OBSGetSceneListReply.scenes:type_name -> streamd.OBSScene
	1,   // 3: streamd.StreamServer.serverType:type_name -> streamd.StreamServerType
	56,  // 4: streamd.StreamServerWithStatistics.config:type_name -> streamd.StreamServer
	57,  // 5: streamd.StreamServerWithStatistics.statistics:type_name -> streamd.StreamServerStatistics
	58,  // 6: streamd.ListStreamServersReply.streamServers:type_name -> streamd.StreamServerWithStatistics
	56,  // 7: streamd.StartStreamServerRequest.config:type_name -> streamd.StreamServer
	65,  // 8: streamd.ListStreamDestinationsReply.streamDestinations:type_name -> streamd.StreamDestination
	65,  // 9: streamd.AddStreamDestinationRequest.config:type_name -> streamd.StreamDestination
	72,  // 10: streamd.ListIncomingStreamsReply.incomingStreams:type_name -> streamd.IncomingStream
	79,  // 11: streamd.StreamForwardQuirks.restartUntilYoutubeRecognizesStream:type_name -> streamd.RestartUntilYoutubeRecognizesStream
	80,  // 12: streamd.StreamForward.quirks:type_name -> streamd.StreamForwardQuirks
	81,  // 13: streamd.StreamForwardWithStatistics.config:type_name -> streamd.StreamForward
	82,  // 14: streamd.StreamForwardWithStatistics.statistics:type_name -> streamd.StreamForwardStatistics
	83,  // 15: streamd.ListStreamForwardsReply.streamForwards:type_name -> streamd.StreamForwardWithStatistics
	81,  // 16: streamd.AddStreamForwardRequest.config:type_name -> streamd.StreamForward
	81,  // 17: streamd.UpdateStreamForwardRequest.config:type_name -> streamd.StreamForward
	81,  // 18: streamd.RemoveStreamForwardRequest.config:type_name -> streamd.StreamForward
	2,   // 19: streamd.StreamPlayerConfig.playerType:type_name -> streamd.PlayerType
	94,  // 20: streamd.StreamPlayerConfig.streamPlaybackConfig:type_name -> streamd.StreamPlaybackConfig
	95,  // 21: streamd.AddStreamPlayerRequest.config:type_name -> streamd.StreamPlayerConfig
	95,  // 22: streamd.UpdateStreamPlayerRequest.config:type_name -> streamd.StreamPlayerConfig
	95,  // 23: streamd.ListStreamPlayersReply.players:type_name -> streamd.StreamPlayerConfig
	95,  // 24: streamd.GetStreamPlayerReply.config:type_name -> streamd.StreamPlayerConfig
	142, // 25: streamd.StreamPlayerOpenRequest.request:type_name -> player.OpenRequest
	143, // 26: streamd.StreamPlayerOpenReply.reply:type_name -> player.OpenReply
	144, // 27: streamd.StreamPlayerProcessTitleRequest.request:type_name -> player.ProcessTitleRequest
	145, // 28: streamd.StreamPlayerProcessTitleReply.reply:type_name -> player.ProcessTitleReply
	146, // 29: streamd.StreamPlayerGetLinkRequest.request:type_name -> player.GetLinkRequest
	147, // 30: streamd.StreamPlayerGetLinkReply.reply:type_name -> player.GetLinkReply
	148, // 31: streamd.StreamPlayerEndChanRequest.request:type_name -> player.EndChanRequest
	149, // 32: streamd.StreamPlayerEndChanReply.reply:type_name -> player.EndChanReply
	150, // 33: streamd.StreamPlayerIsEndedRequest.request:type_name -> player.IsEndedRequest
	151, // 34: streamd.StreamPlayerIsEndedReply.reply:type_name -> player.IsEndedReply
	152, // 35: streamd.StreamPlayerGetPositionRequest.request:type_name -> player.GetPositionRequest
	153, // 36: streamd.StreamPlayerGetPositionReply.reply:type_name -> player.GetPositionReply
	154, // 37: streamd.StreamPlayerGetLengthRequest.request:type_name -> player.GetLengthRequest
	155, // 38: streamd.StreamPlayerGetLengthReply.reply:type_name -> player.GetLengthReply
	156, // 39: streamd.StreamPlayerSetSpeedRequest.request:type_name -> player.SetSpeedRequest
	157, // 40: streamd.StreamPlayerSetSpeedReply.reply:type_name -> player.SetSpeedReply
	158, // 41: streamd.StreamPlayerSetPauseRequest.request:type_name -> player.SetPauseRequest
	159, // 42: streamd.StreamPlayerSetPauseReply.reply:type_name -> player.SetPauseReply
	160, // 43: streamd.StreamPlayerStopRequest.request:type_name -> player.StopRequest
	161, // 44: streamd.StreamPlayerStopReply.reply:type_name -> player.StopReply
	162, // 45: streamd.StreamPlayerCloseRequest.request:type_name -> player.CloseRequest
	163, // 46: streamd.StreamPlayerCloseReply.reply:type_name -> player.CloseReply
	3,   // 47: streamd.StreamD.GetConfig:input_type -> streamd.GetConfigRequest
	5,   // 48: streamd.StreamD.SetConfig:input_type -> streamd.SetConfigRequest
	7,   // 49: streamd.StreamD.SaveConfig:input_type -> streamd.SaveConfigRequest
	128, // 50: streamd.StreamD.SubscribeToConfigChanges:input_type -> streamd.SubscribeToConfigChangesRequest
	9,   // 51: streamd.StreamD.ResetCache:input_type -> streamd.ResetCacheRequest
	11,  // 52: streamd.StreamD.InitCache:input_type -> streamd.InitCacheRequest
	13,  // 53: streamd.StreamD.StartStream:input_type -> streamd.StartStreamRequest
	15,  // 54: streamd.StreamD.EndStream:input_type -> streamd.EndStreamRequest
	17,  // 55: streamd.StreamD.GetStreamStatus:input_type -> streamd.GetStreamStatusRequest
	21,  // 56: streamd.StreamD.IsBackendEnabled:input_type -> streamd.IsBackendEnabledRequest
	19,  // 57: streamd.StreamD.GetBackendInfo:input_type -> streamd.GetBackendInfoRequest
	130, // 58: streamd.StreamD.SubscribeToStreamsChanges:input_type -> streamd.SubscribeToStreamsChangesRequest
	23,  // 59: streamd.StreamD.Restart:input_type -> streamd.RestartRequest
	25,  // 60: streamd.StreamD.SetTitle:input_type -> streamd.SetTitleRequest
	27,  // 61: streamd.StreamD.SetDescription:input_type -> streamd.SetDescriptionRequest
	29,  // 62: streamd.StreamD.ApplyProfile:input_type -> streamd.ApplyProfileRequest
	31,  // 63: streamd.StreamD.UpdateStream:input_type -> streamd.UpdateStreamRequest
	43,  // 64: streamd.StreamD.GetVariable:input_type -> streamd.GetVariableRequest
	45,  // 65: streamd.StreamD.GetVariableHash:input_type -> streamd.GetVariableHashRequest
	47,  // 66: streamd.StreamD.SetVariable:input_type -> streamd.SetVariableRequest
	33,  // 67: streamd.StreamD.EXPERIMENTAL_ReinitStreamControllers:input_type -> streamd.EXPERIMENTAL_ReinitStreamControllersRequest
	35,  // 68: streamd.StreamD.OBSOLETE_FetchConfig:input_type -> streamd.OBSOLETE_FetchConfigRequest
	37,  // 69: streamd.StreamD.OBSOLETE_GitInfo:input_type -> streamd.OBSOLETE_GetGitInfoRequest
	39,  // 70: streamd.StreamD.OBSOLETE_GitRelogin:input_type -> streamd.OBSOLETE_GitReloginRequest
	41,  // 71: streamd.StreamD.SubscribeToOAuthRequests:input_type -> streamd.SubscribeToOAuthRequestsRequest
	54,  // 72: streamd.StreamD.SubmitOAuthCode:input_type -> streamd.SubmitOAuthCodeRequest
	49,  // 73: streamd.StreamD.OBSGetSceneList:input_type -> streamd.OBSGetSceneListRequest
	52,  // 74: streamd.StreamD.OBSSetCurrentProgramScene:input_type -> streamd.OBSSetCurrentProgramSceneRequest
	59,  // 75: streamd.StreamD.ListStreamServers:input_type -> streamd.ListStreamServersRequest
	61,  // 76: streamd.StreamD.StartStreamServer:input_type -> streamd.StartStreamServerRequest
	63,  // 77: streamd.StreamD.StopStreamServer:input_type -> streamd.StopStreamServerRequest
	132, // 78: streamd.StreamD.SubscribeToStreamServersChanges:input_type -> streamd.SubscribeToStreamServersChangesRequest
	66,  // 79: streamd.StreamD.ListStreamDestinations:input_type -> streamd.ListStreamDestinationsRequest
	68,  // 80: streamd.StreamD.AddStreamDestination:input_type -> streamd.AddStreamDestinationRequest
	70,  // 81: streamd.StreamD.RemoveStreamDestination:input_type -> streamd.RemoveStreamDestinationRequest
	134, // 82: streamd.StreamD.SubscribeToStreamDestinationsChanges:input_type -> streamd.SubscribeToStreamDestinationsChangesRequest
	73,  // 83: streamd.StreamD.AddIncomingStream:input_type -> streamd.AddIncomingStreamRequest
	75,  // 84: streamd.StreamD.RemoveIncomingStream:input_type -> streamd.RemoveIncomingStreamRequest
	77,  // 85: streamd.StreamD.ListIncomingStreams:input_type -> streamd.ListIncomingStreamsRequest
	136, // 86: streamd.StreamD.SubscribeToIncomingStreamsChanges:input_type -> streamd.SubscribeToIncomingStreamsChangesRequest
	84,  // 87: streamd.StreamD.ListStreamForwards:input_type -> streamd.ListStreamForwardsRequest
	86,  // 88: streamd.StreamD.AddStreamForward:input_type -> streamd.AddStreamForwardRequest
	88,  // 89: streamd.StreamD.UpdateStreamForward:input_type -> streamd.UpdateStreamForwardRequest
	90,  // 90: streamd.StreamD.RemoveStreamForward:input_type -> streamd.RemoveStreamForwardRequest
	138, // 91: streamd.StreamD.SubscribeToStreamForwardsChanges:input_type -> streamd.SubscribeToStreamForwardsChangesRequest
	92,  // 92: streamd.StreamD.WaitForStreamPublisher:input_type -> streamd.WaitForStreamPublisherRequest
	96,  // 93: streamd.StreamD.AddStreamPlayer:input_type -> streamd.AddStreamPlayerRequest
	98,  // 94: streamd.StreamD.RemoveStreamPlayer:input_type -> streamd.RemoveStreamPlayerRequest
	100, // 95: streamd.StreamD.UpdateStreamPlayer:input_type -> streamd.UpdateStreamPlayerRequest
	102, // 96: streamd.StreamD.ListStreamPlayers:input_type -> streamd.ListStreamPlayersRequest
	104, // 97: streamd.StreamD.GetStreamPlayer:input_type -> streamd.GetStreamPlayerRequest
	140, // 98: streamd.StreamD.SubscribeToStreamPlayersChanges:input_type -> streamd.SubscribeToStreamPlayersChangesRequest
	106, // 99: streamd.StreamD.StreamPlayerOpen:input_type -> streamd.StreamPlayerOpenRequest
	108, // 100: streamd.StreamD.StreamPlayerProcessTitle:input_type -> streamd.StreamPlayerProcessTitleRequest
	110, // 101: streamd.StreamD.StreamPlayerGetLink:input_type -> streamd.StreamPlayerGetLinkRequest
	112, // 102: streamd.StreamD.StreamPlayerEndChan:input_type -> streamd.StreamPlayerEndChanRequest
	114, // 103: streamd.StreamD.StreamPlayerIsEnded:input_type -> streamd.StreamPlayerIsEndedRequest
	116, // 104: streamd.StreamD.StreamPlayerGetPosition:input_type -> streamd.StreamPlayerGetPositionRequest
	118, // 105: streamd.StreamD.StreamPlayerGetLength:input_type -> streamd.StreamPlayerGetLengthRequest
	120, // 106: streamd.StreamD.StreamPlayerSetSpeed:input_type -> streamd.StreamPlayerSetSpeedRequest
	122, // 107: streamd.StreamD.StreamPlayerSetPause:input_type -> streamd.StreamPlayerSetPauseRequest
	124, // 108: streamd.StreamD.StreamPlayerStop:input_type -> streamd.StreamPlayerStopRequest
	126, // 109: streamd.StreamD.StreamPlayerClose:input_type -> streamd.StreamPlayerCloseRequest
	4,   // 110: streamd.StreamD.GetConfig:output_type -> streamd.GetConfigReply
	6,   // 111: streamd.StreamD.SetConfig:output_type -> streamd.SetConfigReply
	8,   // 112: streamd.StreamD.SaveConfig:output_type -> streamd.SaveConfigReply
	129, // 113: streamd.StreamD.SubscribeToConfigChanges:output_type -> streamd.ConfigChange
	10,  // 114: streamd.StreamD.ResetCache:output_type -> streamd.ResetCacheReply
	12,  // 115: streamd.StreamD.InitCache:output_type -> streamd.InitCacheReply
	14,  // 116: streamd.StreamD.StartStream:output_type -> streamd.StartStreamReply
	16,  // 117: streamd.StreamD.EndStream:output_type -> streamd.EndStreamReply
	18,  // 118: streamd.StreamD.GetStreamStatus:output_type -> streamd.GetStreamStatusReply
	22,  // 119: streamd.StreamD.IsBackendEnabled:output_type -> streamd.IsBackendEnabledReply
	20,  // 120: streamd.StreamD.GetBackendInfo:output_type -> streamd.GetBackendInfoReply
	131, // 121: streamd.StreamD.SubscribeToStreamsChanges:output_type -> streamd.StreamsChange
	24,  // 122: streamd.StreamD.Restart:output_type -> streamd.RestartReply
	26,  // 123: streamd.StreamD.SetTitle:output_type -> streamd.SetTitleReply
	28,  // 124: streamd.StreamD.SetDescription:output_type -> streamd.SetDescriptionReply
	30,  // 125: streamd.StreamD.ApplyProfile:output_type -> streamd.ApplyProfileReply
	32,  // 126: streamd.StreamD.UpdateStream:output_type -> streamd.UpdateStreamReply
	44,  // 127: streamd.StreamD.GetVariable:output_type -> streamd.GetVariableReply
	46,  // 128: streamd.StreamD.GetVariableHash:output_type -> streamd.GetVariableHashReply
	48,  // 129: streamd.StreamD.SetVariable:output_type -> streamd.SetVariableReply
	34,  // 130: streamd.StreamD.EXPERIMENTAL_ReinitStreamControllers:output_type -> streamd.EXPERIMENTAL_ReinitStreamControllersReply
	36,  // 131: streamd.StreamD.OBSOLETE_FetchConfig:output_type -> streamd.OBSOLETE_FetchConfigReply
	38,  // 132: streamd.StreamD.OBSOLETE_GitInfo:output_type -> streamd.OBSOLETE_GetGitInfoReply
	40,  // 133: streamd.StreamD.OBSOLETE_GitRelogin:output_type -> streamd.OBSOLETE_GitReloginReply
	42,  // 134: streamd.StreamD.SubscribeToOAuthRequests:output_type -> streamd.OAuthRequest
	55,  // 135: streamd.StreamD.SubmitOAuthCode:output_type -> streamd.SubmitOAuthCodeReply
	51,  // 136: streamd.StreamD.OBSGetSceneList:output_type -> streamd.OBSGetSceneListReply
	53,  // 137: streamd.StreamD.OBSSetCurrentProgramScene:output_type -> streamd.OBSSetCurrentProgramSceneReply
	60,  // 138: streamd.StreamD.ListStreamServers:output_type -> streamd.ListStreamServersReply
	62,  // 139: streamd.StreamD.StartStreamServer:output_type -> streamd.StartStreamServerReply
	64,  // 140: streamd.StreamD.StopStreamServer:output_type -> streamd.StopStreamServerReply
	133, // 141: streamd.StreamD.SubscribeToStreamServersChanges:output_type -> streamd.StreamServersChange
	67,  // 142: streamd.StreamD.ListStreamDestinations:output_type -> streamd.ListStreamDestinationsReply
	69,  // 143: streamd.StreamD.AddStreamDestination:output_type -> streamd.AddStreamDestinationReply
	71,  // 144: streamd.StreamD.RemoveStreamDestination:output_type -> streamd.RemoveStreamDestinationReply
	135, // 145: streamd.StreamD.SubscribeToStreamDestinationsChanges:output_type -> streamd.StreamDestinationsChange
	74,  // 146: streamd.StreamD.AddIncomingStream:output_type -> streamd.AddIncomingStreamReply
	76,  // 147: streamd.StreamD.RemoveIncomingStream:output_type -> streamd.RemoveIncomingStreamReply
	78,  // 148: streamd.StreamD.ListIncomingStreams:output_type -> streamd.ListIncomingStreamsReply
	137, // 149: streamd.StreamD.SubscribeToIncomingStreamsChanges:output_type -> streamd.IncomingStreamsChange
	85,  // 150: streamd.StreamD.ListStreamForwards:output_type -> streamd.ListStreamForwardsReply
	87,  // 151: streamd.StreamD.AddStreamForward:output_type -> streamd.AddStreamForwardReply
	89,  // 152: streamd.StreamD.UpdateStreamForward:output_type -> streamd.UpdateStreamForwardReply
	91,  // 153: streamd.StreamD.RemoveStreamForward:output_type -> streamd.RemoveStreamForwardReply
	139, // 154: streamd.StreamD.SubscribeToStreamForwardsChanges:output_type -> streamd.StreamForwardsChange
	93,  // 155: streamd.StreamD.WaitForStreamPublisher:output_type -> streamd.StreamPublisher
	97,  // 156: streamd.StreamD.AddStreamPlayer:output_type -> streamd.AddStreamPlayerReply
	99,  // 157: streamd.StreamD.RemoveStreamPlayer:output_type -> streamd.RemoveStreamPlayerReply
	101, // 158: streamd.StreamD.UpdateStreamPlayer:output_type -> streamd.UpdateStreamPlayerReply
	103, // 159: streamd.StreamD.ListStreamPlayers:output_type -> streamd.ListStreamPlayersReply
	105, // 160: streamd.StreamD.GetStreamPlayer:output_type -> streamd.GetStreamPlayerReply
	141, // 161: streamd.StreamD.SubscribeToStreamPlayersChanges:output_type -> streamd.StreamPlayersChange
	107, // 162: streamd.StreamD.StreamPlayerOpen:output_type -> streamd.StreamPlayerOpenReply
	109, // 163: streamd.StreamD.StreamPlayerProcessTitle:output_type -> streamd.StreamPlayerProcessTitleReply
	111, // 164: streamd.StreamD.StreamPlayerGetLink:output_type -> streamd.StreamPlayerGetLinkReply
	113, // 165: streamd.StreamD.StreamPlayerEndChan:output_type -> streamd.StreamPlayerEndChanReply
	115, // 166: streamd.StreamD.StreamPlayerIsEnded:output_type -> streamd.StreamPlayerIsEndedReply
	117, // 167: streamd.StreamD.StreamPlayerGetPosition:output_type -> streamd.StreamPlayerGetPositionReply
	119, // 168: streamd.StreamD.StreamPlayerGetLength:output_type -> streamd.StreamPlayerGetLengthReply
	121, // 169: streamd.StreamD.StreamPlayerSetSpeed:output_type -> streamd.StreamPlayerSetSpeedReply
	123, // 170: streamd.StreamD.StreamPlayerSetPause:output_type -> streamd.StreamPlayerSetPauseReply
	125, // 171: streamd.StreamD.StreamPlayerStop:output_type -> streamd.StreamPlayerStopReply
	127, // 172: streamd.StreamD.StreamPlayerClose:output_type -> streamd.StreamPlayerCloseReply
	110, // [110:173] is the sub-list for method output_type
	47,  // [47:110] is the sub-list for method input_type
	47,  // [47:47] is the sub-list for extension type_name
	47,  // [47:47] is the sub-list for extension extendee
	0,   // [0:47] is the sub-list for field type_name
}

func init() { file_streamd_proto_init() }
func file_streamd_proto_init() {
	if File_streamd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_streamd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetCacheReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitCacheReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBackendInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBackendInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBackendEnabledRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsBackendEnabledReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTitleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTitleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDescriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDescriptionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EXPERIMENTAL_ReinitStreamControllersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EXPERIMENTAL_ReinitStreamControllersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSOLETE_FetchConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSOLETE_FetchConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSOLETE_GetGitInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSOLETE_GetGitInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSOLETE_GitReloginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSOLETE_GitReloginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToOAuthRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariableReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariableHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVariableHashReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVariableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVariableReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSGetSceneListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSGetSceneListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSSetCurrentProgramSceneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OBSSetCurrentProgramSceneReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitOAuthCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitOAuthCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServerStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServerWithStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamServersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamServersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStreamServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStreamServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopStreamServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopStreamServerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamDestinationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamDestinationsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStreamDestinationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStreamDestinationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStreamDestinationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStreamDestinationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomingStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIncomingStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIncomingStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveIncomingStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveIncomingStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIncomingStreamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIncomingStreamsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartUntilYoutubeRecognizesStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamForwardQuirks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamForwardStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamForwardWithStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamForwardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamForwardsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStreamForwardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStreamForwardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamForwardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamForwardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStreamForwardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStreamForwardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForStreamPublisherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPublisher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlaybackConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStreamPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStreamPlayerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStreamPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStreamPlayerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStreamPlayerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStreamPlayersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamPlayerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerOpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerOpenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerProcessTitleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerProcessTitleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerGetLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerGetLinkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerEndChanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerEndChanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerIsEndedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerIsEndedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerGetPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerGetPositionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerGetLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerGetLengthReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerSetSpeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerSetSpeedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerSetPauseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerSetPauseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerStopReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerCloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayerCloseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToConfigChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToStreamsChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamsChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToStreamServersChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServersChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToStreamDestinationsChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDestinationsChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToIncomingStreamsChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomingStreamsChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToStreamForwardsChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamForwardsChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeToStreamPlayersChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamd_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPlayersChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_streamd_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_streamd_proto_msgTypes[49].OneofWrappers = []interface{}{
		(*OBSSetCurrentProgramSceneRequest_SceneName)(nil),
		(*OBSSetCurrentProgramSceneRequest_SceneUUID)(nil),
	}
	file_streamd_proto_msgTypes[89].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_streamd_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   139,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_streamd_proto_goTypes,
		DependencyIndexes: file_streamd_proto_depIdxs,
		EnumInfos:         file_streamd_proto_enumTypes,
		MessageInfos:      file_streamd_proto_msgTypes,
	}.Build()
	File_streamd_proto = out.File
	file_streamd_proto_rawDesc = nil
	file_streamd_proto_goTypes = nil
	file_streamd_proto_depIdxs = nil
}
